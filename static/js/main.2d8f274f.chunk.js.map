{"version":3,"sources":["Components/TaskUI/Task/TaskInterface.ts","Components/TaskUI/TaskList/TaskListSlice.ts","Components/TaskUI/TaskListFilter/TaskFilterSlice.ts","Components/TaskFilterPreset/TaskFilterPresetSlice.ts","Components/ProjectUI/ProjectList/ProjectListSlice.tsx","Components/UICommunications/UICommunicationsSlice.ts","store.ts","reportWebVitals.js","Components/UserProfileDropdown/UserProfileDropdown.tsx","Components/Sidebars/NavLink.tsx","Components/Sidebars/SecondaryLink.tsx","Components/Sidebars/Sidebar.tsx","Components/Sidebars/MobileSidebar.tsx","Components/PinnedProjects/PinnedProjects.tsx","hooks.ts","Components/TaskUI/TaskListFilter/TaskListFilterSelect.tsx","Components/TaskUI/TaskListFilter/TaskListFilters.tsx","Components/TaskUI/SearchHeader/SearchHeader.tsx","Components/TaskUI/Task/TinyTask.tsx","Components/TaskUI/Task/Task.tsx","Components/TaskUI/TaskList/TaskList.tsx","Components/TaskUI/SelectedTask/PrioritySelect.tsx","Components/ButtonGroup/ButtonGroup.tsx","Components/TaskUI/SelectedTask/ProjectSelect.tsx","Components/TaskUI/SelectedTask/SelectedTask.tsx","Components/TaskUI/TasksHeader/TasksHeader.tsx","Components/TaskUI/TasksHeader/AddNewTask/AddNewTask.tsx","Components/TaskUI/TasksHeader/TopTaskHeader.tsx","Components/UserProfileDropdown/ExportState.tsx","Components/UserProfileDropdown/ImportState.tsx","Components/TaskUI/TaskUI.tsx","Components/ProjectUI/Project/TinyProject.tsx","Components/ProjectUI/ProjectList/ProjectList.tsx","Components/ProjectUI/ProjectHeader/AddNewProject/AddNewProject.tsx","Components/ProjectUI/ProjectHeader/TopProjectHeader.tsx","Components/ProjectUI/ProjectUI.tsx","App.tsx","index.tsx"],"names":["TaskStatus","TaskPriority","enableMapSet","taskListSlice","createSlice","name","initialState","taskList","byId","allIds","selectedTask","reducers","addTask","state","action","payload","task","newTaskId","String","length","newTaskProject","project","note","status","Active","priority","None","dueDate","deferDate","created","Date","now","modified","completed","archived","push","selectTask","updateTaskTaskName","taskId","newName","updateTaskTaskStatus","newStatus","Complete","updateTaskTaskNote","newNote","updateTaskTaskPriority","newPriority","updateTaskTaskDeferDate","newDate","updateTaskTaskDueDate","updateTaskTaskProject","newProject","archiveTask","actions","getTasks","tasks","getSelectedTaskId","getSelectedTask","selected","taskFilterSlice","completion","hasNote","setCompletionFilter","setPriorityFilter","setHasNoteFilter","clearAllFilters","getFilters","filters","taskFilterPresetSlice","taskFilters","selectedFilter","addFilterPreset","newTaskFilterPresetId","clearFilterPresets","projectListSlice","projectList","addProject","newProjectId","pinned","getProjects","projects","uiCommunicationSlice","exportJSONModalOpen","importJSONModalOpen","setExportJSONModal","setImportJSONModal","getExportJSONModalOpen","comms","getImportJSONModalOpen","persistConfig","key","storage","blacklist","taskPersistConfig","filtersPersistConfig","presetsPersistConfig","projectsPersistConfig","uiCommsPersistConfig","combineReducers","persistReducer","taskReducer","taskFilterReducer","presets","taskFilterPresetReducer","projectReducer","uiCommsReducer","persistedReducer","store","configureStore","reducer","middleware","thunk","persistor","persistStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","classNames","classes","filter","Boolean","join","UserProfileDropdown","exportOpen","useSelector","importOpen","dispatch","useDispatch","setExportOpen","setImportOpen","userProfileDropdownLink","linkText","open","setOpen","className","Item","active","onClick","as","Button","src","alt","aria-hidden","show","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","static","NavLink","item","href","to","current","aria-current","undefined","icon","SecondaryLink","team","bgColorClass","Sidebar","sidebarOpen","setSidebarOpen","currentURL","useLocation","pathname","section","split","isActive","navigation","HomeIcon","ClipboardListIcon","htmlFor","type","id","placeholder","map","role","aria-labelledby","target","rel","teams","MobileSidebar","Root","onClose","Child","Overlay","pinnedProjects","title","initials","members","handle","imageUrl","totalMembers","lastUpdated","PinnedProjects","projectId","useAppDispatch","TaskListFilterSelect","currentFilterValue","updateFilterFunction","filterLabel","optionArray","handleBooleanValues","filterValue","value","onChange","e","Label","Options","Option","TaskListFilters","currentFilters","Dropped","Low","Medium","High","Immediate","SearchHeader","method","TinyTask","props","Task","setSelectTask","currentTarget","updateTaskStatus","projectName","formatTaskDates","date","toLocaleDateString","isToday","toDateString","taskCheckboxIconColor","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","taskCheckboxIcon","text","noteIcon","TaskList","taskListFilters","getTaskById","hasNoteFilter","priorityFilter","completionFilter","archivedFilter","inSelectedProjectFilter","excludeProjectedTasksFilter","sortFunction","taskIdA","taskIdB","taskA","taskB","sort","index","buildTinyTaskList","buildTaskList","priorityOptions","label","PrioritySelect","selectedTaskId","currentPriority","updateTaskPriority","ButtonGroup","buttonGroupSelectedOption","onClickArg","options","idPrefix","buttonIsActive","option","convertOptionText","buttonText","leftButton","slice","rightButton","ProjectSelect","selectedProjectId","setProject","ProjectSelectOption","SelectedTask","useState","useEffect","styleDates","toLocaleString","taskSubsectionHeader","subsectionHeader","datepicker","dateChangeFunction","placeholderText","chosenDate","isClearable","dateFormat","todayButton","openToDate","afterLeave","Title","rows","updateTaskName","projectID","getTime","updateTaskNote","TaskHeader","AddNewTask","taskText","setTaskText","createNewTask","trim","Panel","onKeyDown","shiftKey","preventDefault","onEnterPress","TopHeader","ExportState","jsonData","fileData","JSON","stringify","blob","Blob","url","URL","createObjectURL","link","document","createElement","download","click","saveStateAsJSON","ImportState","event","file","files","reader","FileReader","onload","output","readAsText","console","log","uploadFile","TaskUI","TopTaskHeader","TinyProject","ProjectList","buildTinyProjectList","buildProjectTaskList","projectFilteredTaskIds","colSpan","AddNewProject","projectText","setProjectText","createNewProject","ProjectUI","TopProjectHeader","App","exact","path","ReactDOM","loading","basename","getElementById"],"mappings":"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","file":"static/js/main.2d8f274f.chunk.js","sourcesContent":["export enum TaskStatus {\r\n  Active = \"Active\",\r\n  Complete = \"Complete\",\r\n  Dropped = \"Dropped\",\r\n}\r\n\r\nexport enum TaskPriority {\r\n  None = \"None\",\r\n  Low = \"Low ✅\",\r\n  Medium = \"Medium ⚠️\",\r\n  High = \"High 🛑\",\r\n  Immediate = \"Immediate ⛔️\",\r\n}\r\n\r\nexport default interface Task {\r\n  // The actual task text\r\n  task: string;\r\n\r\n  // Anything placed into the note text box\r\n  note: string;\r\n\r\n  // One of the three possible statuses that a task can have\r\n  status: TaskStatus;\r\n\r\n  // One of the five possible priorities, default None\r\n  priority: TaskPriority;\r\n\r\n  // Select when this task is actually needing to be completed\r\n  dueDate: number | null;\r\n  deferDate: number | null;\r\n\r\n  project: string | null;\r\n\r\n  // Timestamps\r\n  readonly created: number;\r\n  modified: number;\r\n  completed: number;\r\n  archived: number | null;\r\n}\r\n","import { enableMapSet } from \"immer\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../../store\";\r\n\r\nimport TaskList from \"./TaskListInterface\";\r\nimport { TaskPriority, TaskStatus } from \"../Task/TaskInterface\";\r\n\r\nenableMapSet();\r\n\r\nconst initialState: TaskList = {\r\n  taskList: { byId: {}, allIds: [] },\r\n  selectedTask: null,\r\n};\r\n\r\nexport const taskListSlice = createSlice({\r\n  name: \"tasks\",\r\n  initialState,\r\n  reducers: {\r\n    addTask: (state: TaskList, action: PayloadAction<any>) => {\r\n      // Do not add task if the field is empty\r\n      if (action.payload.task === \"\") {\r\n        return;\r\n      }\r\n\r\n      const newTaskId = String(state.taskList.allIds.length);\r\n      const newTaskProject = action.payload.project\r\n        ? action.payload.project\r\n        : null;\r\n\r\n      state.taskList.byId[newTaskId] = {\r\n        task: action.payload.task,\r\n\r\n        note: \"\",\r\n\r\n        status: TaskStatus.Active,\r\n\r\n        priority: TaskPriority.None,\r\n\r\n        dueDate: null,\r\n        deferDate: null,\r\n\r\n        project: newTaskProject,\r\n\r\n        created: Date.now(),\r\n        modified: Date.now(),\r\n        completed: -1,\r\n        archived: null,\r\n      };\r\n      state.taskList.allIds.push(newTaskId);\r\n    },\r\n    selectTask: (state: TaskList, action: PayloadAction<string | null>) => {\r\n      state.selectedTask = action.payload;\r\n    },\r\n    updateTaskTaskName: (state: TaskList, action: PayloadAction<any>) => {\r\n      const task = state.taskList.byId[action.payload.taskId];\r\n\r\n      task.task = action.payload.newName;\r\n      task.modified = Date.now();\r\n    },\r\n    updateTaskTaskStatus: (state: TaskList, action: PayloadAction<any>) => {\r\n      const task = state.taskList.byId[action.payload.taskId];\r\n\r\n      task.status = action.payload.newStatus;\r\n\r\n      if (task.status === TaskStatus.Complete) {\r\n        task.completed = Date.now();\r\n      } else {\r\n        task.completed = -1;\r\n      }\r\n\r\n      task.modified = Date.now();\r\n    },\r\n    updateTaskTaskNote: (state: TaskList, action: PayloadAction<any>) => {\r\n      const task = state.taskList.byId[action.payload.taskId];\r\n\r\n      task.note = action.payload.newNote;\r\n      task.modified = Date.now();\r\n    },\r\n    updateTaskTaskPriority: (state: TaskList, action: PayloadAction<any>) => {\r\n      const task = state.taskList.byId[action.payload.taskId];\r\n\r\n      task.priority = action.payload.newPriority;\r\n      task.modified = Date.now();\r\n    },\r\n    updateTaskTaskDeferDate: (state: TaskList, action: PayloadAction<any>) => {\r\n      const task = state.taskList.byId[action.payload.taskId];\r\n\r\n      task.deferDate = action.payload.newDate;\r\n      task.modified = Date.now();\r\n    },\r\n    updateTaskTaskDueDate: (state: TaskList, action: PayloadAction<any>) => {\r\n      const task = state.taskList.byId[action.payload.taskId];\r\n\r\n      task.dueDate = action.payload.newDate;\r\n      task.modified = Date.now();\r\n    },\r\n    updateTaskTaskProject: (state: TaskList, action: PayloadAction<any>) => {\r\n      const task = state.taskList.byId[action.payload.taskId];\r\n\r\n      task.project = action.payload.newProject;\r\n      task.modified = Date.now();\r\n    },\r\n    archiveTask: (state: TaskList, action: PayloadAction<any>) => {\r\n      const task = state.taskList.byId[action.payload.taskId];\r\n\r\n      task.archived = Date.now();\r\n      task.modified = Date.now();\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addTask,\r\n  selectTask,\r\n  updateTaskTaskName,\r\n  updateTaskTaskStatus,\r\n  updateTaskTaskNote,\r\n  updateTaskTaskPriority,\r\n  updateTaskTaskDeferDate,\r\n  updateTaskTaskDueDate,\r\n  updateTaskTaskProject,\r\n  archiveTask,\r\n} = taskListSlice.actions;\r\n\r\nexport const getTasks = (state: RootState) => state.tasks.taskList;\r\nexport const getSelectedTaskId = (state: RootState) => state.tasks.selectedTask;\r\nexport const getSelectedTask = (state: RootState) => {\r\n  const selected = state.tasks.selectedTask;\r\n  if (selected !== null) {\r\n    return state.tasks.taskList.byId[selected];\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default taskListSlice.reducer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../../store\";\r\nimport { TaskPriority, TaskStatus } from \"../Task/TaskInterface\";\r\nimport TaskFilter from \"./TaskFiltersInterface\";\r\n\r\nconst initialState: TaskFilter = {\r\n  completion: null,\r\n  priority: null,\r\n  hasNote: null,\r\n};\r\n\r\nexport const taskFilterSlice = createSlice({\r\n  name: \"filters\",\r\n  initialState,\r\n  reducers: {\r\n    setCompletionFilter: (\r\n      state: TaskFilter,\r\n      action: PayloadAction<TaskStatus>\r\n    ) => {\r\n      state.completion = action.payload;\r\n    },\r\n    setPriorityFilter: (\r\n      state: TaskFilter,\r\n      action: PayloadAction<TaskPriority>\r\n    ) => {\r\n      state.priority = action.payload;\r\n    },\r\n    setHasNoteFilter: (state: TaskFilter, action: PayloadAction<boolean>) => {\r\n      state.hasNote = action.payload;\r\n    },\r\n    clearAllFilters: (state: TaskFilter) => {\r\n      state.completion = null;\r\n      state.priority = null;\r\n      state.hasNote = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setCompletionFilter,\r\n  setPriorityFilter,\r\n  setHasNoteFilter,\r\n  clearAllFilters,\r\n} = taskFilterSlice.actions;\r\n\r\nexport const getFilters = (state: RootState) => state.filters;\r\n\r\nexport default taskFilterSlice.reducer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport TaskFilter, {\r\n  TaskFilterPreset,\r\n} from \"../TaskUI/TaskListFilter/TaskFiltersInterface\";\r\nimport { RootState } from \"../../store\";\r\n\r\nconst initialState: TaskFilterPreset = {\r\n  taskFilters: { byId: {}, allIds: [] },\r\n  selectedFilter: null,\r\n};\r\n\r\nexport const taskFilterPresetSlice = createSlice({\r\n  name: \"presets\",\r\n  initialState,\r\n  reducers: {\r\n    addFilterPreset: (\r\n      state: TaskFilterPreset,\r\n      action: PayloadAction<TaskFilter>\r\n    ) => {\r\n      const newTaskFilterPresetId = String(state.taskFilters.allIds.length);\r\n\r\n      state.taskFilters.byId[newTaskFilterPresetId] = action.payload;\r\n      state.taskFilters.allIds.push(newTaskFilterPresetId);\r\n    },\r\n    clearFilterPresets: (state: TaskFilterPreset) => {\r\n      state.taskFilters.byId = {};\r\n      state.taskFilters.allIds = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addFilterPreset,\r\n  clearFilterPresets,\r\n} = taskFilterPresetSlice.actions;\r\n\r\nexport const getTaskFilterPresets = (state: RootState) =>\r\n  state.presets.taskFilters;\r\n\r\nexport default taskFilterPresetSlice.reducer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport ProjectList from \"./ProjectListInterface\";\r\nimport { RootState } from \"../../../store\";\r\n\r\nconst initialState: ProjectList = {\r\n  projectList: { byId: {}, allIds: [] },\r\n};\r\n\r\nexport const projectListSlice = createSlice({\r\n  name: \"projects\",\r\n  initialState,\r\n  reducers: {\r\n    addProject: (state: ProjectList, action: PayloadAction<string>) => {\r\n      if (action.payload === \"\") {\r\n        return;\r\n      }\r\n\r\n      const newProjectId = String(state.projectList.allIds.length);\r\n\r\n      state.projectList.byId[newProjectId] = {\r\n        project: action.payload,\r\n\r\n        pinned: false,\r\n\r\n        created: Date.now(),\r\n        modified: Date.now(),\r\n        completed: -1,\r\n        archived: null,\r\n      };\r\n\r\n      state.projectList.allIds.push(newProjectId);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addProject } = projectListSlice.actions;\r\n\r\nexport const getProjects = (state: RootState) => state.projects.projectList;\r\n\r\nexport default projectListSlice.reducer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../store\";\r\n\r\nexport interface CommsLayer {\r\n  exportJSONModalOpen: boolean;\r\n  importJSONModalOpen: boolean;\r\n}\r\n\r\nconst initialState = {\r\n  exportJSONModalOpen: false,\r\n  importJSONModalOpen: false,\r\n};\r\n\r\n// TODO: Migrate SelectedTask stuff to here\r\nexport const uiCommunicationSlice = createSlice({\r\n  name: \"comms\",\r\n  initialState,\r\n  reducers: {\r\n    setExportJSONModal: (state: CommsLayer, action: PayloadAction<boolean>) => {\r\n      state.exportJSONModalOpen = !state.exportJSONModalOpen;\r\n    },\r\n    setImportJSONModal: (state: CommsLayer, action: PayloadAction<boolean>) => {\r\n      state.importJSONModalOpen = !state.importJSONModalOpen;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setExportJSONModal,\r\n  setImportJSONModal,\r\n} = uiCommunicationSlice.actions;\r\n\r\nexport const getExportJSONModalOpen = (state: RootState) =>\r\n  state.comms.exportJSONModalOpen;\r\nexport const getImportJSONModalOpen = (state: RootState) =>\r\n  state.comms.importJSONModalOpen;\r\n\r\nexport default uiCommunicationSlice.reducer;\r\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\n// Change this to electron storage when I switch to electron\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport taskReducer from \"./Components/TaskUI/TaskList/TaskListSlice\";\r\nimport taskFilterReducer from \"./Components/TaskUI/TaskListFilter/TaskFilterSlice\";\r\nimport taskFilterPresetReducer from \"./Components/TaskFilterPreset/TaskFilterPresetSlice\";\r\nimport projectReducer from \"./Components/ProjectUI/ProjectList/ProjectListSlice\";\r\nimport uiCommsReducer from \"./Components/UICommunications/UICommunicationsSlice\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  blacklist: [\"tasks\", \"presets\", \"projects\", \"comms\"],\r\n};\r\n\r\nconst taskPersistConfig = {\r\n  key: \"tasks\",\r\n  storage,\r\n  blacklist: [\"selectedTask\"],\r\n};\r\n\r\nconst filtersPersistConfig = {\r\n  key: \"filters\",\r\n  storage,\r\n};\r\n\r\nconst presetsPersistConfig = {\r\n  key: \"presets\",\r\n  storage,\r\n};\r\n\r\nconst projectsPersistConfig = {\r\n  key: \"projects\",\r\n  storage,\r\n};\r\n\r\nconst uiCommsPersistConfig = {\r\n  key: \"comms\",\r\n  storage,\r\n  blacklist: [\"exportJSONModalOpen\"],\r\n};\r\n\r\nconst reducers = combineReducers({\r\n  tasks: persistReducer(taskPersistConfig, taskReducer),\r\n  filters: persistReducer(filtersPersistConfig, taskFilterReducer),\r\n  presets: persistReducer(presetsPersistConfig, taskFilterPresetReducer),\r\n  projects: persistReducer(projectsPersistConfig, projectReducer),\r\n  comms: persistReducer(uiCommsPersistConfig, uiCommsReducer),\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: [thunk],\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Menu, Transition } from \"@headlessui/react\";\r\nimport { SelectorIcon } from \"@heroicons/react/solid\";\r\nimport { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getExportJSONModalOpen,\r\n  getImportJSONModalOpen,\r\n  setExportJSONModal,\r\n  setImportJSONModal,\r\n} from \"../UICommunications/UICommunicationsSlice\";\r\n\r\n// @ts-ignore: Unreachable code error\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nfunction UserProfileDropdown() {\r\n  const exportOpen = useSelector(getExportJSONModalOpen);\r\n  const importOpen = useSelector(getImportJSONModalOpen);\r\n  const dispatch = useDispatch();\r\n\r\n  const setExportOpen = () => {\r\n    dispatch(setExportJSONModal(!exportOpen));\r\n  };\r\n\r\n  const setImportOpen = () => {\r\n    dispatch(setImportJSONModal(!importOpen));\r\n  };\r\n\r\n  const userProfileDropdownLink = (\r\n    linkText: string,\r\n    open?: boolean,\r\n    setOpen?: Function\r\n  ) => {\r\n    return (\r\n      <div className=\"py-1\">\r\n        <Menu.Item>\r\n          {({ active }) => (\r\n            <button\r\n              className={classNames(\r\n                active ? \"bg-gray-100 text-gray-900\" : \"text-gray-700\",\r\n                \"block px-4 py-2 text-sm w-full text-left\"\r\n              )}\r\n              onClick={() => setOpen(!open)}\r\n            >\r\n              {linkText}\r\n            </button>\r\n          )}\r\n        </Menu.Item>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Menu as=\"div\" className=\"px-3 mt-6 relative inline-block text-left\">\r\n      {({ open }) => (\r\n        <>\r\n          <div>\r\n            <Menu.Button className=\"group w-full bg-gray-100 rounded-md px-3.5 py-2 text-sm text-left font-medium text-gray-700 hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-purple-500\">\r\n              <span className=\"flex w-full justify-between items-center\">\r\n                <span className=\"flex min-w-0 items-center justify-between space-x-3\">\r\n                  <img\r\n                    className=\"w-10 h-10 bg-gray-300 rounded-full flex-shrink-0\"\r\n                    src=\"https://avatars.githubusercontent.com/u/9056294?s=400&u=ec70834818e3ea5d1423849ad4f8507d8deed970&v=4\"\r\n                    alt=\"\"\r\n                  />\r\n                  <span className=\"flex-1 flex flex-col min-w-0\">\r\n                    <span className=\"text-gray-900 text-sm font-medium truncate\">\r\n                      Will Mitchell\r\n                    </span>\r\n                    <span className=\"text-gray-500 text-sm truncate\">\r\n                      @will_mitch\r\n                    </span>\r\n                  </span>\r\n                </span>\r\n                <SelectorIcon\r\n                  className=\"flex-shrink-0 h-5 w-5 text-gray-400 group-hover:text-gray-500\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </span>\r\n            </Menu.Button>\r\n          </div>\r\n          <Transition\r\n            show={open}\r\n            as={Fragment}\r\n            enter=\"transition ease-out duration-100\"\r\n            enterFrom=\"transform opacity-0 scale-95\"\r\n            enterTo=\"transform opacity-100 scale-100\"\r\n            leave=\"transition ease-in duration-75\"\r\n            leaveFrom=\"transform opacity-100 scale-100\"\r\n            leaveTo=\"transform opacity-0 scale-95\"\r\n          >\r\n            <Menu.Items\r\n              static\r\n              className=\"z-10 mx-3 origin-top absolute right-0 left-0 mt-1 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 divide-y divide-gray-200 focus:outline-none\"\r\n            >\r\n              <div className=\"py-1\">\r\n                {userProfileDropdownLink(\"Settings - Does Nothing\")}\r\n              </div>\r\n              <div className=\"py-1\">\r\n                {userProfileDropdownLink(\r\n                  \"Export JSON\",\r\n                  exportOpen,\r\n                  setExportOpen\r\n                )}\r\n                {userProfileDropdownLink(\r\n                  \"Import JSON\",\r\n                  importOpen,\r\n                  setImportOpen\r\n                )}\r\n              </div>\r\n              <div className=\"py-1\">\r\n                {userProfileDropdownLink(\"Get desktop app - Does Nothing\")}\r\n              </div>\r\n            </Menu.Items>\r\n          </Transition>\r\n        </>\r\n      )}\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default UserProfileDropdown;\r\n","import { Link } from \"react-router-dom\";\r\n\r\n// @ts-ignore: Unreachable code error\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nfunction NavLink(item: {\r\n  name: string;\r\n  href: string;\r\n  current: boolean;\r\n  icon: any;\r\n}) {\r\n  return (\r\n    <Link\r\n      key={item.name}\r\n      href={item.href}\r\n      to={`${item.href}`}\r\n      className={classNames(\r\n        item.current\r\n          ? \"bg-gray-200 text-gray-900\"\r\n          : \"text-gray-700 hover:text-gray-900 hover:bg-gray-50\",\r\n        \"group flex items-center px-2 py-2 text-sm font-medium rounded-md\"\r\n      )}\r\n      aria-current={item.current ? \"page\" : undefined}\r\n    >\r\n      <item.icon\r\n        className={classNames(\r\n          item.current\r\n            ? \"text-gray-500\"\r\n            : \"text-gray-400 group-hover:text-gray-500\",\r\n          \"mr-3 h-6 w-6\"\r\n        )}\r\n        aria-hidden=\"true\"\r\n      />\r\n      {item.name}\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default NavLink;\r\n","// @ts-ignore: Unreachable code error\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nfunction SecondaryLink(team: {\r\n  name: string;\r\n  href: string;\r\n  bgColorClass: string;\r\n}) {\r\n  return (\r\n    <a\r\n      key={team.name}\r\n      href={team.href}\r\n      className=\"group flex items-center px-3 py-2 text-sm font-medium text-gray-700 rounded-md hover:text-gray-900 hover:bg-gray-50\"\r\n    >\r\n      <span\r\n        className={classNames(\r\n          team.bgColorClass,\r\n          \"w-2.5 h-2.5 mr-4 rounded-full\"\r\n        )}\r\n        aria-hidden=\"true\"\r\n      />\r\n      <span className=\"truncate\">{team.name}</span>\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default SecondaryLink;\r\n","import UserProfileDropdown from \"../UserProfileDropdown/UserProfileDropdown\";\r\nimport {\r\n  HomeIcon,\r\n  SearchIcon,\r\n  ClipboardListIcon,\r\n} from \"@heroicons/react/outline\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\nimport NavLink from \"../Sidebars/NavLink\";\r\nimport SecondaryLink from \"./SecondaryLink\";\r\n\r\n/**\r\n * Returns the Sidebar component\r\n * @return {FunctionComponent}\r\n */\r\nfunction Sidebar(sidebarOpen: boolean, setSidebarOpen: Function) {\r\n  const currentURL = useLocation().pathname;\r\n\r\n  const section = currentURL ? currentURL.split(\"/\")[1] : null;\r\n\r\n  const isActive = (href: string) => (section ? section === href : false);\r\n\r\n  const navigation = [\r\n    {\r\n      name: \"Inbox\",\r\n      href: \"/inbox\",\r\n      icon: HomeIcon,\r\n      current: isActive(\"inbox\"),\r\n    },\r\n    {\r\n      name: \"Projects\",\r\n      href: \"/projects\",\r\n      icon: ClipboardListIcon,\r\n      current: isActive(\"projects\"),\r\n    },\r\n  ];\r\n\r\n  const teams = [\r\n    { name: \"Doesn't Do Anything\", href: \"#\", bgColorClass: \"bg-indigo-500\" },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"hidden lg:flex lg:flex-shrink-0\">\r\n      <div className=\"flex flex-col w-64 border-r border-gray-200 pt-5 bg-gray-100\">\r\n        <div className=\"flex items-center flex-shrink-0 px-6\">\r\n          <img\r\n            className=\"h-8 w-auto\"\r\n            src=\"https://tailwindui.com/img/logos/workflow-logo-purple-500-mark-gray-700-text.svg\"\r\n            alt=\"Workflow\"\r\n          />\r\n        </div>\r\n        {/* Sidebar component, swap this element with another sidebar if you like */}\r\n        <div className=\"h-0 flex-1 flex flex-col overflow-y-auto\">\r\n          {/* User account dropdown */}\r\n          {UserProfileDropdown()}\r\n          {/* Sidebar Search */}\r\n          <div className=\"px-3 mt-5\">\r\n            <label htmlFor=\"search\" className=\"sr-only\">\r\n              Search\r\n            </label>\r\n            <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n              <div\r\n                className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\"\r\n                aria-hidden=\"true\"\r\n              >\r\n                <SearchIcon\r\n                  className=\"mr-3 h-4 w-4 text-gray-400\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"search\"\r\n                id=\"search\"\r\n                className=\"focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-9 sm:text-sm border-gray-300 rounded-md\"\r\n                placeholder=\"Search\"\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* Navigation */}\r\n          <nav className=\"px-3 mt-6\">\r\n            <div className=\"space-y-1\">\r\n              {navigation.map((item) => {\r\n                return NavLink(item);\r\n              })}\r\n            </div>\r\n            <div className=\"mt-8\">\r\n              {/* Secondary navigation */}\r\n              <h3\r\n                className=\"px-3 text-xs font-semibold text-gray-500 uppercase tracking-wider\"\r\n                id=\"teams-headline\"\r\n              >\r\n                Teams\r\n              </h3>\r\n              <div\r\n                className=\"mt-1 space-y-1\"\r\n                role=\"group\"\r\n                aria-labelledby=\"teams-headline\"\r\n              >\r\n                {teams.map((team) => SecondaryLink(team))}\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n        <div className=\"flex-shrink-0 bg-purple-700 p-4 divide-y\">\r\n          <a\r\n            href=\"https://github.com/ChangedNameTo/open-gtd\"\r\n            className=\"flex-shrink-0 w-full group block\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            <div className=\"flex items-center\">\r\n              <div>\r\n                <img\r\n                  className=\"inline-block h-9 w-9 rounded-full\"\r\n                  src=\"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"ml-3\">\r\n                <p className=\"text-sm font-medium text-white\">OpenGTD Github</p>\r\n                <p className=\"text-xs font-medium text-gray-300 group-hover:text-gray-200\">\r\n                  Follow the Project\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import { Fragment } from \"react\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport { HomeIcon, XIcon } from \"@heroicons/react/solid\";\r\n\r\nconst navigation = [\r\n  { name: \"Tasks\", href: \"#\", icon: HomeIcon, current: true },\r\n];\r\n\r\nconst teams = [\r\n  { name: \"Doesn't Do Anything\", href: \"#\", bgColorClass: \"bg-indigo-500\" },\r\n];\r\n\r\n// @ts-ignore: Unreachable code error\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nfunction MobileSidebar(sidebarOpen: boolean, setSidebarOpen: Function) {\r\n  return (\r\n    <Transition.Root show={sidebarOpen} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        static\r\n        className=\"fixed inset-0 flex z-40 lg:hidden\"\r\n        open={sidebarOpen}\r\n        onClose={() => setSidebarOpen(!sidebarOpen)}\r\n      >\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"transition-opacity ease-linear duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"transition-opacity ease-linear duration-300\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <Dialog.Overlay className=\"fixed inset-0 bg-gray-600 bg-opacity-75\" />\r\n        </Transition.Child>\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"transition ease-in-out duration-300 transform\"\r\n          enterFrom=\"-translate-x-full\"\r\n          enterTo=\"translate-x-0\"\r\n          leave=\"transition ease-in-out duration-300 transform\"\r\n          leaveFrom=\"translate-x-0\"\r\n          leaveTo=\"-translate-x-full\"\r\n        >\r\n          <div className=\"relative flex-1 flex flex-col max-w-xs w-full pt-5 pb-4 bg-white\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-in-out duration-300\"\r\n              enterFrom=\"opacity-0\"\r\n              enterTo=\"opacity-100\"\r\n              leave=\"ease-in-out duration-300\"\r\n              leaveFrom=\"opacity-100\"\r\n              leaveTo=\"opacity-0\"\r\n            >\r\n              <div className=\"absolute top-0 right-0 -mr-12 pt-2\">\r\n                <button\r\n                  className=\"ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\r\n                  onClick={() => setSidebarOpen(false)}\r\n                >\r\n                  <span className=\"sr-only\">Close sidebar</span>\r\n                  <XIcon className=\"h-6 w-6 text-white\" aria-hidden=\"true\" />\r\n                </button>\r\n              </div>\r\n            </Transition.Child>\r\n            <div className=\"flex-shrink-0 flex items-center px-4\">\r\n              <img\r\n                className=\"h-8 w-auto\"\r\n                src=\"https://tailwindui.com/img/logos/workflow-logo-purple-500-mark-gray-700-text.svg\"\r\n                alt=\"Workflow\"\r\n              />\r\n            </div>\r\n            <div className=\"mt-5 flex-1 h-0 overflow-y-auto\">\r\n              <nav className=\"px-2\">\r\n                <div className=\"space-y-1\">\r\n                  {navigation.map((item) => (\r\n                    <a\r\n                      key={item.name}\r\n                      href={item.href}\r\n                      className={classNames(\r\n                        item.current\r\n                          ? \"bg-gray-100 text-gray-900\"\r\n                          : \"text-gray-600 hover:text-gray-900 hover:bg-gray-50\",\r\n                        \"group flex items-center px-2 py-2 text-base leading-5 font-medium rounded-md\"\r\n                      )}\r\n                      aria-current={item.current ? \"page\" : undefined}\r\n                    >\r\n                      <item.icon\r\n                        className={classNames(\r\n                          item.current\r\n                            ? \"text-gray-500\"\r\n                            : \"text-gray-400 group-hover:text-gray-500\",\r\n                          \"mr-3 h-6 w-6\"\r\n                        )}\r\n                        aria-hidden=\"true\"\r\n                      />\r\n                      {item.name}\r\n                    </a>\r\n                  ))}\r\n                </div>\r\n                <div className=\"mt-8\">\r\n                  <h3\r\n                    className=\"px-3 text-xs font-semibold text-gray-500 uppercase tracking-wider\"\r\n                    id=\"teams-headline\"\r\n                  >\r\n                    Teams\r\n                  </h3>\r\n                  <div\r\n                    className=\"mt-1 space-y-1\"\r\n                    role=\"group\"\r\n                    aria-labelledby=\"teams-headline\"\r\n                  >\r\n                    {teams.map((team) => (\r\n                      <a\r\n                        key={team.name}\r\n                        href={team.href}\r\n                        className=\"group flex items-center px-3 py-2 text-base leading-5 font-medium text-gray-600 rounded-md hover:text-gray-900 hover:bg-gray-50\"\r\n                      >\r\n                        <span\r\n                          className={classNames(\r\n                            team.bgColorClass,\r\n                            \"w-2.5 h-2.5 mr-4 rounded-full\"\r\n                          )}\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                        <span className=\"truncate\">{team.name}</span>\r\n                      </a>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </Transition.Child>\r\n        <div className=\"flex-shrink-0 w-14\" aria-hidden=\"true\">\r\n          {/* Dummy element to force sidebar to shrink to fit close icon */}\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n}\r\n\r\nexport default MobileSidebar;\r\n","import { Fragment } from \"react\";\r\n\r\nimport { Menu, Transition } from \"@headlessui/react\";\r\nimport { DotsVerticalIcon } from \"@heroicons/react/solid\";\r\n\r\nconst projects = [\r\n  {\r\n    id: 1,\r\n    title: \"Does Nothing\",\r\n    initials: \"GA\",\r\n    team: \"Engineering\",\r\n    members: [\r\n      {\r\n        name: \"Dries Vincent\",\r\n        handle: \"driesvincent\",\r\n        imageUrl:\r\n          \"https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\",\r\n      },\r\n      {\r\n        name: \"Lindsay Walton\",\r\n        handle: \"lindsaywalton\",\r\n        imageUrl:\r\n          \"https://images.unsplash.com/photo-1517841905240-472988babdf9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\",\r\n      },\r\n      {\r\n        name: \"Courtney Henry\",\r\n        handle: \"courtneyhenry\",\r\n        imageUrl:\r\n          \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\",\r\n      },\r\n      {\r\n        name: \"Tom Cook\",\r\n        handle: \"tomcook\",\r\n        imageUrl:\r\n          \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\",\r\n      },\r\n    ],\r\n    totalMembers: 12,\r\n    lastUpdated: \"March 17, 2020\",\r\n    pinned: true,\r\n    bgColorClass: \"bg-pink-600\",\r\n  },\r\n  // More projects...\r\n];\r\nconst pinnedProjects = projects.filter((project) => project.pinned);\r\n\r\n// @ts-ignore: Unreachable code error\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nfunction PinnedProjects(projectId: string | null) {\r\n  if (projectId) {\r\n    return;\r\n  }\r\n\r\n  return (\r\n    <div className=\"px-4 mt-6 mb-8 sm:px-6 lg:px-8\">\r\n      <h2 className=\"text-gray-500 text-xs font-medium uppercase tracking-wide\">\r\n        Pinned Projects\r\n      </h2>\r\n      <ul className=\"grid grid-cols-1 gap-4 sm:gap-6 sm:grid-cols-2 xl:grid-cols-4 mt-3\">\r\n        {pinnedProjects.map((project) => (\r\n          <li\r\n            key={project.id}\r\n            className=\"relative col-span-1 flex shadow-sm rounded-md\"\r\n          >\r\n            <div\r\n              className={classNames(\r\n                project.bgColorClass,\r\n                \"flex-shrink-0 flex items-center justify-center w-16 text-white text-sm font-medium rounded-l-md\"\r\n              )}\r\n            >\r\n              {project.initials}\r\n            </div>\r\n            <div className=\"flex-1 flex items-center justify-between border-t border-r border-b border-gray-200 bg-white rounded-r-md truncate\">\r\n              <div className=\"flex-1 px-4 py-2 text-sm truncate\">\r\n                <div className=\"text-gray-900 font-medium hover:text-gray-600\">\r\n                  {project.title}\r\n                </div>\r\n                <p className=\"text-gray-500\">{project.totalMembers} Members</p>\r\n              </div>\r\n              <Menu as=\"div\" className=\"flex-shrink-0 pr-2\">\r\n                {({ open }) => (\r\n                  <>\r\n                    <Menu.Button className=\"w-8 h-8 bg-white inline-flex items-center justify-center text-gray-400 rounded-full hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500\">\r\n                      <span className=\"sr-only\">Open options</span>\r\n                      <DotsVerticalIcon\r\n                        className=\"w-5 h-5\"\r\n                        aria-hidden=\"true\"\r\n                      />\r\n                    </Menu.Button>\r\n                    <Transition\r\n                      show={open}\r\n                      as={Fragment}\r\n                      enter=\"transition ease-out duration-100\"\r\n                      enterFrom=\"transform opacity-0 scale-95\"\r\n                      enterTo=\"transform opacity-100 scale-100\"\r\n                      leave=\"transition ease-in duration-75\"\r\n                      leaveFrom=\"transform opacity-100 scale-100\"\r\n                      leaveTo=\"transform opacity-0 scale-95\"\r\n                    >\r\n                      <Menu.Items\r\n                        static\r\n                        className=\"z-10 mx-3 origin-top-right absolute right-0 top-3 w-72 mt-1 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 divide-y divide-gray-200 focus:outline-none\"\r\n                      >\r\n                        <div className=\"py-1\">\r\n                          <Menu.Item>\r\n                            {({ active }) => (\r\n                              <button\r\n                                className={classNames(\r\n                                  active\r\n                                    ? \"bg-gray-100 text-gray-900\"\r\n                                    : \"text-gray-700\",\r\n                                  \"block px-4 py-2 text-sm w-full text-left\"\r\n                                )}\r\n                              >\r\n                                View - Does Nothing\r\n                              </button>\r\n                            )}\r\n                          </Menu.Item>\r\n                        </div>\r\n                        <div className=\"py-1\">\r\n                          <Menu.Item>\r\n                            {({ active }) => (\r\n                              <button\r\n                                className={classNames(\r\n                                  active\r\n                                    ? \"bg-gray-100 text-gray-900\"\r\n                                    : \"text-gray-700\",\r\n                                  \"block px-4 py-2 text-sm w-full text-left\"\r\n                                )}\r\n                              >\r\n                                Removed from pinned - Does Nothing\r\n                              </button>\r\n                            )}\r\n                          </Menu.Item>\r\n                          <Menu.Item>\r\n                            {({ active }) => (\r\n                              <button\r\n                                className={classNames(\r\n                                  active\r\n                                    ? \"bg-gray-100 text-gray-900\"\r\n                                    : \"text-gray-700\",\r\n                                  \"block px-4 py-2 text-sm w-full text-left\"\r\n                                )}\r\n                              >\r\n                                Share - Does Nothing\r\n                              </button>\r\n                            )}\r\n                          </Menu.Item>\r\n                        </div>\r\n                      </Menu.Items>\r\n                    </Transition>\r\n                  </>\r\n                )}\r\n              </Menu>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PinnedProjects;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './store'\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { Listbox, Transition } from \"@headlessui/react\";\r\nimport { Fragment } from \"react\";\r\nimport { SelectorIcon, CheckIcon } from \"@heroicons/react/outline\";\r\n\r\nfunction classNames(...classes: any[]) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nfunction TaskListFilterSelect(\r\n  currentFilterValue: any | null,\r\n  updateFilterFunction: Function,\r\n  filterLabel: string,\r\n  optionArray: any[]\r\n) {\r\n  const handleBooleanValues = (filterValue: any) => {\r\n    if (filterValue === true) {\r\n      return \"True\";\r\n    } else if (filterValue === false) {\r\n      return \"False\";\r\n    } else if (filterValue === null) {\r\n      return \"N/A\";\r\n    } else {\r\n      return filterValue;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Listbox\r\n      value={currentFilterValue}\r\n      onChange={(e) => updateFilterFunction(e)}\r\n    >\r\n      {({ open }) => (\r\n        <>\r\n          <Listbox.Label className=\"block text-sm font-bold\">\r\n            {filterLabel}\r\n          </Listbox.Label>\r\n          <div className=\"mt-1 relative\">\r\n            <Listbox.Button className=\"bg-white relative w-full max-w-1/6 border border-gray-300 rounded-md shadow-sm pl-3 pr-10 md:py-2 sm:py-1 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">\r\n              <span className=\"block truncate\">\r\n                {handleBooleanValues(currentFilterValue)}\r\n              </span>\r\n              <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\r\n                <SelectorIcon\r\n                  className=\"h-5 w-5 text-gray-400\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </span>\r\n            </Listbox.Button>\r\n          </div>\r\n          <Transition\r\n            show={open}\r\n            as={Fragment}\r\n            leave=\"transition ease-in duration-100\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Listbox.Options\r\n              static\r\n              className=\"absolute z-10 mt-1 w-1/4 bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\r\n            >\r\n              {optionArray.map((status) => (\r\n                <Listbox.Option\r\n                  key={status}\r\n                  className={({ active }) =>\r\n                    classNames(\r\n                      active ? \"text-white bg-indigo-600\" : \"text-gray-900\",\r\n                      \"cursor-default select-none relative py-2 pl-3 pr-9\"\r\n                    )\r\n                  }\r\n                  value={status}\r\n                >\r\n                  {({ selected, active }) => (\r\n                    <>\r\n                      <span\r\n                        className={classNames(\r\n                          selected ? \"font-semibold\" : \"font-normal\",\r\n                          \"block truncate\"\r\n                        )}\r\n                      >\r\n                        {handleBooleanValues(status)}\r\n                      </span>\r\n\r\n                      {selected ? (\r\n                        <span\r\n                          className={classNames(\r\n                            active ? \"text-white\" : \"text-indigo-600\",\r\n                            \"absolute inset-y-0 right-0 flex items-center pr-4\"\r\n                          )}\r\n                        >\r\n                          <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                        </span>\r\n                      ) : null}\r\n                    </>\r\n                  )}\r\n                </Listbox.Option>\r\n              ))}\r\n            </Listbox.Options>\r\n          </Transition>\r\n        </>\r\n      )}\r\n    </Listbox>\r\n  );\r\n}\r\n\r\nexport default TaskListFilterSelect;\r\n","import { useSelector } from \"react-redux\";\r\nimport { useAppDispatch } from \"../../../hooks\";\r\nimport { TaskPriority, TaskStatus } from \"../Task/TaskInterface\";\r\nimport { addFilterPreset } from \"../../TaskFilterPreset/TaskFilterPresetSlice\";\r\nimport TaskListFilterSelect from \"./TaskListFilterSelect\";\r\nimport {\r\n  getFilters,\r\n  setCompletionFilter,\r\n  setPriorityFilter,\r\n  setHasNoteFilter,\r\n  clearAllFilters,\r\n} from \"./TaskFilterSlice\";\r\n\r\nfunction TaskListFilters() {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const currentFilters = useSelector(getFilters);\r\n\r\n  const updateCompletionFilter = (status: TaskStatus) => {\r\n    dispatch(setCompletionFilter(status));\r\n  };\r\n\r\n  const updatePriorityFilter = (status: TaskPriority) => {\r\n    dispatch(setPriorityFilter(status));\r\n  };\r\n\r\n  const updateHasNoteFilter = (status: boolean) => {\r\n    dispatch(setHasNoteFilter(status));\r\n  };\r\n\r\n  const saveClearAllFilters = () => {\r\n    dispatch(clearAllFilters());\r\n  };\r\n\r\n  const saveNewTaskFilterPreset = () => {\r\n    dispatch(addFilterPreset(currentFilters));\r\n  };\r\n\r\n  const filterDivClasses = () => {\r\n    return \"px-2 py-3 my-2 mx-2 md:mx-0 bg-white shadow rounded-lg\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"border-t w-full mx-auto sm:px-1 lg:px-3 bg-gray-100 grid md:grid-cols-4 md:gap-2 sm:grid-cols-1\">\r\n      <div className={filterDivClasses()}>\r\n        {TaskListFilterSelect(\r\n          currentFilters.completion,\r\n          updateCompletionFilter,\r\n          \"Task Status\",\r\n          [TaskStatus.Active, TaskStatus.Complete, TaskStatus.Dropped, null]\r\n        )}\r\n      </div>\r\n      <div className={filterDivClasses()}>\r\n        {TaskListFilterSelect(\r\n          currentFilters.priority,\r\n          updatePriorityFilter,\r\n          \"Task Priority\",\r\n          [\r\n            TaskPriority.None,\r\n            TaskPriority.Low,\r\n            TaskPriority.Medium,\r\n            TaskPriority.High,\r\n            TaskPriority.Immediate,\r\n            null,\r\n          ]\r\n        )}\r\n      </div>\r\n      <div className={filterDivClasses()}>\r\n        {TaskListFilterSelect(\r\n          currentFilters.hasNote,\r\n          updateHasNoteFilter,\r\n          \"Has Note?\",\r\n          [true, false, null]\r\n        )}\r\n      </div>\r\n      <div className={filterDivClasses()}>\r\n        <label className=\"block text-sm font-bold\">Filter Actions</label>\r\n        <div className=\"flex flex-row justify-center\">\r\n          <button\r\n            className=\"ml-3 mt-1 inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 sm:order-0 sm:ml-0\"\r\n            onClick={() => saveClearAllFilters()}\r\n          >\r\n            Clear All Filters\r\n          </button>\r\n          <button\r\n            className=\"mt-1 inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 sm:order-1 ml-3\"\r\n            onClick={() => saveNewTaskFilterPreset()}\r\n          >\r\n            Save New Preset\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskListFilters;\r\n","import { Fragment } from \"react\";\r\nimport { MenuAlt1Icon } from \"@heroicons/react/outline\";\r\nimport { SearchIcon } from \"@heroicons/react/solid\";\r\nimport { Menu, Transition } from \"@headlessui/react\";\r\n\r\n// @ts-ignore: Unreachable code error\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nfunction SearchHeader(sidebarOpen: boolean, setSidebarOpen: Function) {\r\n  return (\r\n    <div className=\"relative z-10 flex-shrink-0 flex h-16 bg-white border-b border-gray-200 lg:hidden\">\r\n      <button\r\n        className=\"px-4 border-r border-gray-200 text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-purple-500 lg:hidden\"\r\n        onClick={() => setSidebarOpen(true)}\r\n      >\r\n        <span className=\"sr-only\">Open sidebar</span>\r\n        <MenuAlt1Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n      </button>\r\n      <div className=\"flex-1 flex justify-between px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex-1 flex\">\r\n          <form className=\"w-full flex md:ml-0\" action=\"#\" method=\"GET\">\r\n            <label htmlFor=\"search_field\" className=\"sr-only\">\r\n              Search\r\n            </label>\r\n            <div className=\"relative w-full text-gray-400 focus-within:text-gray-600\">\r\n              <div className=\"absolute inset-y-0 left-0 flex items-center pointer-events-none\">\r\n                <SearchIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n              </div>\r\n              <input\r\n                id=\"search_field\"\r\n                name=\"search_field\"\r\n                className=\"block w-full h-full pl-8 pr-3 py-2 border-transparent text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-0 focus:border-transparent focus:placeholder-gray-400 sm:text-sm\"\r\n                placeholder=\"Search\"\r\n                type=\"search\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"flex items-center\">\r\n          {/* Profile dropdown */}\r\n          <Menu as=\"div\" className=\"ml-3 relative\">\r\n            {({ open }) => (\r\n              <>\r\n                <div>\r\n                  <Menu.Button className=\"max-w-xs bg-white flex items-center text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500\">\r\n                    <span className=\"sr-only\">Open user menu</span>\r\n                    <img\r\n                      className=\"h-8 w-8 rounded-full\"\r\n                      src=\"https://avatars.githubusercontent.com/u/9056294?s=400&u=ec70834818e3ea5d1423849ad4f8507d8deed970&v=4\"\r\n                      alt=\"\"\r\n                    />\r\n                  </Menu.Button>\r\n                </div>\r\n                <Transition\r\n                  show={open}\r\n                  as={Fragment}\r\n                  enter=\"transition ease-out duration-100\"\r\n                  enterFrom=\"transform opacity-0 scale-95\"\r\n                  enterTo=\"transform opacity-100 scale-100\"\r\n                  leave=\"transition ease-in duration-75\"\r\n                  leaveFrom=\"transform opacity-100 scale-100\"\r\n                  leaveTo=\"transform opacity-0 scale-95\"\r\n                >\r\n                  <Menu.Items\r\n                    static\r\n                    className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 divide-y divide-gray-200 focus:outline-none\"\r\n                  >\r\n                    <div className=\"py-1\">\r\n                      <Menu.Item>\r\n                        {({ active }) => (\r\n                          <button\r\n                            className={classNames(\r\n                              active\r\n                                ? \"bg-gray-100 text-gray-900\"\r\n                                : \"text-gray-700\",\r\n                              \"block px-4 py-2 text-sm w-full text-left\"\r\n                            )}\r\n                          >\r\n                            View profile\r\n                          </button>\r\n                        )}\r\n                      </Menu.Item>\r\n                      <Menu.Item>\r\n                        {({ active }) => (\r\n                          <button\r\n                            className={classNames(\r\n                              active\r\n                                ? \"bg-gray-100 text-gray-900\"\r\n                                : \"text-gray-700\",\r\n                              \"block px-4 py-2 text-sm w-full text-left\"\r\n                            )}\r\n                          >\r\n                            Settings\r\n                          </button>\r\n                        )}\r\n                      </Menu.Item>\r\n                      <Menu.Item>\r\n                        {({ active }) => (\r\n                          <button\r\n                            className={classNames(\r\n                              active\r\n                                ? \"bg-gray-100 text-gray-900\"\r\n                                : \"text-gray-700\",\r\n                              \"block px-4 py-2 text-sm w-full text-left\"\r\n                            )}\r\n                          >\r\n                            Notifications\r\n                          </button>\r\n                        )}\r\n                      </Menu.Item>\r\n                    </div>\r\n                    <div className=\"py-1\">\r\n                      <Menu.Item>\r\n                        {({ active }) => (\r\n                          <button\r\n                            className={classNames(\r\n                              active\r\n                                ? \"bg-gray-100 text-gray-900\"\r\n                                : \"text-gray-700\",\r\n                              \"block px-4 py-2 text-sm w-full text-left\"\r\n                            )}\r\n                          >\r\n                            Get Desktop App\r\n                          </button>\r\n                        )}\r\n                      </Menu.Item>\r\n                      <Menu.Item>\r\n                        {({ active }) => (\r\n                          <button\r\n                            className={classNames(\r\n                              active\r\n                                ? \"bg-gray-100 text-gray-900\"\r\n                                : \"text-gray-700\",\r\n                              \"block px-4 py-2 text-sm w-full text-left\"\r\n                            )}\r\n                          >\r\n                            Support\r\n                          </button>\r\n                        )}\r\n                      </Menu.Item>\r\n                    </div>\r\n                    <div className=\"py-1\">\r\n                      <Menu.Item>\r\n                        {({ active }) => (\r\n                          <button\r\n                            className={classNames(\r\n                              active\r\n                                ? \"bg-gray-100 text-gray-900\"\r\n                                : \"text-gray-700\",\r\n                              \"block px-4 py-2 text-sm w-full text-left\"\r\n                            )}\r\n                          >\r\n                            Logout\r\n                          </button>\r\n                        )}\r\n                      </Menu.Item>\r\n                    </div>\r\n                  </Menu.Items>\r\n                </Transition>\r\n              </>\r\n            )}\r\n          </Menu>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchHeader;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../store\";\r\nimport { ChevronRightIcon } from \"@heroicons/react/solid\";\r\n\r\n/**\r\n * Creates a task object for display.\r\n * @param props {Object} Contains the Task object that users will click on. This is the basic unit of all of open-gtd.\r\n * @returns {FunctionComponent}\r\n */\r\nfunction TinyTask(props: { taskId: string }) {\r\n  const task = useSelector(\r\n    (state: RootState) => state.tasks.taskList.byId[props.taskId]\r\n  );\r\n\r\n  return (\r\n    <li key={props.taskId}>\r\n      <div className=\"group flex items-center justify-between px-4 py-4 hover:bg-gray-50 sm:px-6 cursor-pointer\">\r\n        <span className=\"flex items-center truncate space-x-3\">\r\n          <span\r\n            className={\"w-2.5 h-2.5 flex-shrink-0 rounded-full\"}\r\n            aria-hidden=\"true\"\r\n          />\r\n          <span className=\"font-medium truncate text-sm leading-6\">\r\n            {task.task}\r\n          </span>\r\n        </span>\r\n        <ChevronRightIcon\r\n          className=\"ml-4 h-5 w-5 text-gray-400 group-hover:text-gray-500 flex-shrink-0\"\r\n          aria-hidden=\"true\"\r\n        />\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default TinyTask;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useAppDispatch } from \"../../../hooks\";\r\nimport { RootState } from \"../../../store\";\r\nimport { selectTask, updateTaskTaskStatus } from \"../TaskList/TaskListSlice\";\r\nimport { TaskStatus } from \"./TaskInterface\";\r\nimport {\r\n  DuplicateIcon as DuplicateIconOutline,\r\n  CheckCircleIcon,\r\n  ExclamationCircleIcon,\r\n} from \"@heroicons/react/outline\";\r\n\r\nimport { DuplicateIcon as DuplicateIconSolid } from \"@heroicons/react/solid\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nfunction Task(props: { taskId: string; projectId?: string }) {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const task = useSelector(\r\n    (state: RootState) => state.tasks.taskList.byId[props.taskId]\r\n  );\r\n\r\n  const setSelectTask = (\r\n    e: React.MouseEvent<HTMLAnchorElement | HTMLDivElement, MouseEvent>\r\n  ) => {\r\n    if (e.target !== e.currentTarget) {\r\n      return;\r\n    }\r\n    dispatch(selectTask(props.taskId));\r\n  };\r\n\r\n  const updateTaskStatus = (status: TaskStatus) => {\r\n    dispatch(updateTaskTaskStatus({ newStatus: status, taskId: props.taskId }));\r\n  };\r\n\r\n  const taskText = () => (task.task ? task.task : \"Empty task text\");\r\n\r\n  const projectName = useSelector((state: RootState) =>\r\n    task.project ? state.projects.projectList.byId[task.project].project : null\r\n  );\r\n\r\n  const projectText = () => (task.project ? projectName : \"-\");\r\n\r\n  const taskCheckboxIconColor = () => {\r\n    const now = new Date();\r\n    const dueDate = new Date(task.dueDate);\r\n    const isToday = now.toDateString() === dueDate.toDateString();\r\n\r\n    if (!task.dueDate) {\r\n      // No data\r\n      return \"text-gray-300\";\r\n    }\r\n\r\n    if (now > dueDate && !isToday) {\r\n      // Overdue\r\n      return \"text-red-300\";\r\n    } else if (now < dueDate && !isToday) {\r\n      // Due Future\r\n      return \"text-gray-300\";\r\n    } else {\r\n      // Due Today\r\n      return \"text-yellow-300\";\r\n    }\r\n  };\r\n\r\n  const taskCheckboxIcon = () => {\r\n    const classes = `${taskCheckboxIconColor()} mt-1 h-7 w-7 cursor-pointer`;\r\n    if (task.status === TaskStatus.Active) {\r\n      return (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className={classes}\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke=\"currentColor\"\r\n          onClick={() => updateTaskStatus(TaskStatus.Complete)}\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"2\"\r\n            // d=\"M15 13l-3 3m0 0l-3-3m3 3V8m0 13a9 9 0 110-18 9 9 0 010 18z\"\r\n            d=\"M 21 12 a 9 9 0 1 1 -18 0 a 9 9 0 0 1 18 0 z\"\r\n          />\r\n        </svg>\r\n      );\r\n    } else if (task.status === TaskStatus.Complete) {\r\n      return (\r\n        <CheckCircleIcon\r\n          className={classes}\r\n          onClick={() => updateTaskStatus(TaskStatus.Active)}\r\n        />\r\n      );\r\n    } else if (task.status === TaskStatus.Dropped) {\r\n      return (\r\n        <ExclamationCircleIcon\r\n          className={classes}\r\n          onClick={() => updateTaskStatus(TaskStatus.Active)}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const noteIcon = () => {\r\n    const classes =\r\n      \"w-8 h-8 bg-white inline-flex items-center justify-center text-gray-400 rounded-full \";\r\n\r\n    if (task.note) {\r\n      return (\r\n        <CopyToClipboard text={task.note}>\r\n          <DuplicateIconSolid\r\n            className={`${classes}hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 disabled`}\r\n          />\r\n        </CopyToClipboard>\r\n      );\r\n    } else {\r\n      return <DuplicateIconOutline className={`${classes}`} />;\r\n    }\r\n  };\r\n\r\n  const priorityIcon = () => {\r\n    return (\r\n      <div\r\n        className=\"inline rounded-xl border border-gray-500 px-2 py-0.5 text-gray-500\"\r\n        onClick={(e) => setSelectTask(e)}\r\n      >\r\n        {task.priority}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const formatTaskDates = (date: number | null) => {\r\n    if (date && date > 0) {\r\n      return new Date(date).toLocaleDateString(\"en-us\");\r\n    } else {\r\n      return \"-\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <tr\r\n      key={props.taskId}\r\n      id={`taskId${props.taskId}`}\r\n      onClick={(e) => setSelectTask(e)}\r\n    >\r\n      <td className=\"px-2 py-0.5 text-sm text-gray-500 font-medium\">\r\n        {taskCheckboxIcon()}\r\n      </td>\r\n      {/* Task Name */}\r\n      <td\r\n        className=\"px-2 py-0.5 max-w-0 w-2/3 whitespace-nowrap text-sm font-medium text-gray-900 cursor-pointer\"\r\n        onClick={(e) => setSelectTask(e)}\r\n      >\r\n        <div className=\"flex items-center\" onClick={(e) => setSelectTask(e)}>\r\n          <div\r\n            className={\"flex-shrink-0 w-2.5 h-2.5 rounded-full\"}\r\n            aria-hidden=\"true\"\r\n          />\r\n          <div\r\n            className=\"truncate hover:text-gray-600 cursor-pointer\"\r\n            onClick={(e) => setSelectTask(e)}\r\n          >\r\n            {taskText()}\r\n          </div>\r\n        </div>\r\n      </td>\r\n      {/* Task Project Parent */}\r\n      <td\r\n        className=\"px-6 py-0.5 max-w-0 w-1/3 whitespace-nowrap text-sm font-medium text-gray-900 cursor-pointer\"\r\n        onClick={(e) => setSelectTask(e)}\r\n      >\r\n        <div className=\"flex items-center\" onClick={(e) => setSelectTask(e)}>\r\n          <div\r\n            className={\"flex-shrink-0 w-2.5 h-2.5 rounded-full\"}\r\n            aria-hidden=\"true\"\r\n          />\r\n          <div\r\n            className=\"truncate hover:text-gray-600 cursor-pointer\"\r\n            onClick={(e) => setSelectTask(e)}\r\n          >\r\n            {projectText()}\r\n          </div>\r\n        </div>\r\n      </td>\r\n      {/* Priority */}\r\n      <td className=\"py-0.5 text-sm text-gray-500 font-medium text-center\">\r\n        {priorityIcon()}\r\n      </td>\r\n      {/* Defer Date */}\r\n      <td className=\"hidden md:table-cell px-6 py-0.5 whitespace-nowrap text-sm text-gray-500 text-right\">\r\n        {formatTaskDates(task.deferDate)}\r\n      </td>\r\n      {/* Due Date */}\r\n      <td className=\"hidden md:table-cell px-6 py-0.5 whitespace-nowrap text-sm text-gray-500 text-right\">\r\n        {formatTaskDates(task.dueDate)}\r\n      </td>\r\n      {/* Options */}\r\n      <td className=\"pr-6\">\r\n        <div className=\"relative flex justify-end items-center cursor-pointer\">\r\n          <span className=\"sr-only\">Copy Note</span>\r\n          {noteIcon()}\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Fragment } from \"react\";\r\nimport { getTasks } from \"./TaskListSlice\";\r\nimport TinyTask from \"../Task/TinyTask\";\r\nimport Task from \"../Task/Task\";\r\nimport { getFilters } from \"../TaskListFilter/TaskFilterSlice\";\r\n\r\n/**\r\n * Creates the Task Rows for the main task UI.\r\n * @returns {FunctionComponent}\r\n */\r\nfunction TaskList(projectId: string | null) {\r\n  const taskList = useSelector(getTasks);\r\n  const taskListFilters = useSelector(getFilters);\r\n\r\n  const getTaskById = (taskId: string) => taskList.byId[taskId];\r\n\r\n  const hasNoteFilter = (taskId: string) => {\r\n    if (taskListFilters.hasNote) {\r\n      return getTaskById(taskId).note !== \"\";\r\n    } else if (taskListFilters.hasNote === false) {\r\n      return getTaskById(taskId).note === \"\";\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const priorityFilter = (taskId: string) => {\r\n    if (taskListFilters.priority) {\r\n      return taskListFilters.priority === getTaskById(taskId).priority;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const completionFilter = (taskId: string) => {\r\n    if (taskListFilters.completion) {\r\n      return taskListFilters.completion === getTaskById(taskId).status;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const archivedFilter = (taskId: string) => {\r\n    return getTaskById(taskId).archived === null;\r\n  };\r\n\r\n  const inSelectedProjectFilter = (taskId: string) => {\r\n    if (projectId) {\r\n      return getTaskById(taskId).project === projectId;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const excludeProjectedTasksFilter = (taskId: string) => {\r\n    if (!projectId) {\r\n      return getTaskById(taskId).project === null;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const sortFunction = (taskIdA: string, taskIdB: string) => {\r\n    const taskA = getTaskById(taskIdA);\r\n    const taskB = getTaskById(taskIdB);\r\n\r\n    if (!taskA) {\r\n      return -1;\r\n    }\r\n    if (!taskB) {\r\n      return 1;\r\n    }\r\n\r\n    if (taskA.dueDate > taskB.dueDate) return 1;\r\n    if (taskA.dueDate < taskB.dueDate) return -1;\r\n    if (taskA.deferDate > taskB.deferDate) return 1;\r\n    if (taskA.deferDate < taskB.deferDate) return -1;\r\n    return 0;\r\n  };\r\n\r\n  const buildTinyTaskList = () => {\r\n    if (taskList.allIds) {\r\n      return taskList.allIds\r\n        .filter(completionFilter)\r\n        .filter(priorityFilter)\r\n        .filter(hasNoteFilter)\r\n        .filter(archivedFilter)\r\n        .filter(inSelectedProjectFilter)\r\n        .filter(excludeProjectedTasksFilter)\r\n        .sort(sortFunction)\r\n        .map((taskId, index) => {\r\n          return <TinyTask taskId={taskId} key={index} />;\r\n        });\r\n    }\r\n  };\r\n\r\n  const buildTaskList = () => {\r\n    if (taskList.allIds) {\r\n      return taskList.allIds\r\n        .filter(completionFilter)\r\n        .filter(priorityFilter)\r\n        .filter(hasNoteFilter)\r\n        .filter(archivedFilter)\r\n        .filter(inSelectedProjectFilter)\r\n        .filter(excludeProjectedTasksFilter)\r\n        .sort(sortFunction)\r\n        .map((taskId, index) => {\r\n          return <Task taskId={taskId} key={index} />;\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* Task list (only on smallest breakpoint) */}\r\n      <div className=\"mt-10 sm:hidden\">\r\n        <div className=\"px-4 sm:px-6\">\r\n          <h2 className=\"text-gray-500 text-xs font-medium uppercase tracking-wide\">\r\n            Tasks\r\n          </h2>\r\n        </div>\r\n        <ul className=\"mt-3 border-t border-gray-200 divide-y divide-gray-100\">\r\n          {buildTinyTaskList()}\r\n        </ul>\r\n      </div>\r\n      {/* Task table (small breakpoint and up) */}\r\n      <div className=\"hidden sm:block\">\r\n        <div className=\"align-middle inline-block min-w-full border-b border-gray-200\">\r\n          <table className=\"min-w-full\" id=\"taskList\">\r\n            <thead>\r\n              <tr className=\"border-t border-gray-200\">\r\n                <th className=\"py-3 px-2 border-b border-gray-200 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\" />\r\n                <th className=\"px-2 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  <span className=\"lg:pl-2\">Task</span>\r\n                </th>\r\n                <th className=\"px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  <span className=\"lg:pl-2\">Project</span>\r\n                </th>\r\n                <th className=\"px-12 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Priority\r\n                </th>\r\n                <th className=\"hidden md:table-cell px-6 py-3 border-b border-gray-200 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Defer Date\r\n                </th>\r\n                <th className=\"hidden md:table-cell px-6 py-3 border-b border-gray-200 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Due Date\r\n                </th>\r\n                <th className=\"pr-6 py-3 border-b border-gray-200 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\" />\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-100\">\r\n              {buildTaskList()}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n","import { ChangeEvent } from \"react\";\r\nimport { TaskPriority } from \"../Task/TaskInterface\";\r\nimport { updateTaskTaskPriority } from \"../TaskList/TaskListSlice\";\r\n\r\nconst priorityOptions = [\r\n  { value: TaskPriority.None, label: TaskPriority.None },\r\n  { value: TaskPriority.Low, label: TaskPriority.Low },\r\n  { value: TaskPriority.Medium, label: TaskPriority.Medium },\r\n  { value: TaskPriority.High, label: TaskPriority.High },\r\n  { value: TaskPriority.Immediate, label: TaskPriority.Immediate },\r\n];\r\n\r\nfunction PrioritySelect(\r\n  dispatch: any,\r\n  selectedTaskId: string,\r\n  currentPriority: TaskPriority\r\n) {\r\n  const updateTaskPriority = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    dispatch(\r\n      updateTaskTaskPriority({\r\n        newPriority: e.target.value,\r\n        taskId: selectedTaskId,\r\n      })\r\n    );\r\n  };\r\n\r\n  const buildOptionsList = () => {\r\n    return priorityOptions.map((value) => {\r\n      return (\r\n        <option\r\n          className=\"w-full rounded\"\r\n          value={value.value}\r\n          key={value.value}\r\n        >\r\n          {value.label}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  // TODO: Change this to use divs and a's instead of being a select\r\n  return (\r\n    <select\r\n      className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md\"\r\n      onChange={(e) => updateTaskPriority(e)}\r\n      id=\"selectedTaskPrioritySelect\"\r\n      value={currentPriority}\r\n    >\r\n      {buildOptionsList()}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default PrioritySelect;\r\n","function ButtonGroup(\r\n  buttonGroupSelectedOption: any,\r\n  onClickArg: Function,\r\n  options: any[],\r\n  idPrefix: string\r\n) {\r\n  const buttonIsActive = (option: any) => {\r\n    if (buttonGroupSelectedOption === option) {\r\n      return \"font-semibold bg-indigo-700 text-white hover:text-indigo-700 hover:bg-indigo-300\";\r\n    } else {\r\n      return \"font-medium bg-gray-100 text-gray-700 hover:text-gray-700 hover:bg-gray-300\";\r\n    }\r\n  };\r\n\r\n  const convertOptionText = (option: any) => {\r\n    if (option === null) {\r\n      return \"Select All\";\r\n    } else if (option === true) {\r\n      return \"True\";\r\n    } else if (option === false) {\r\n      return \"False\";\r\n    } else {\r\n      return option;\r\n    }\r\n  };\r\n\r\n  const leftButton = () => {\r\n    const buttonText = options[0];\r\n\r\n    return (\r\n      <button\r\n        className={`${buttonIsActive(\r\n          buttonText\r\n        )} -ml-px w-full items-center px-4 py-2 rounded-l-md border border-gray-300 text-sm focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500`}\r\n        id={`${idPrefix}${buttonText}Button`}\r\n        onClick={() => onClickArg(buttonText)}\r\n        key={buttonText}\r\n      >\r\n        {convertOptionText(buttonText)}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const middleButtons = () => {\r\n    return options.slice(1, options.length - 1).map((buttonText, index) => {\r\n      return (\r\n        <button\r\n          className={`${buttonIsActive(\r\n            buttonText\r\n          )} -ml-px w-full items-center px-4 py-2 border border-gray-300 bg-white text-sm focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500`}\r\n          id={`${idPrefix}${buttonText}Button`}\r\n          onClick={() => onClickArg(buttonText)}\r\n          key={buttonText}\r\n        >\r\n          {convertOptionText(buttonText)}\r\n        </button>\r\n      );\r\n    });\r\n  };\r\n\r\n  const rightButton = () => {\r\n    const buttonText = options[options.length - 1];\r\n    return (\r\n      <button\r\n        className={`${buttonIsActive(\r\n          buttonText\r\n        )} -ml-px w-full items-center px-4 py-2 rounded-r-md border border-gray-300 text-sm focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500`}\r\n        id={`${idPrefix}${buttonText}Button`}\r\n        onClick={() => onClickArg(buttonText)}\r\n        key={buttonText}\r\n      >\r\n        {convertOptionText(buttonText)}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative z-0 flex flex-row shadow-sm rounded-md\">\r\n      {leftButton()}\r\n      {middleButtons()}\r\n      {rightButton()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonGroup;\r\n","import { Listbox, Transition } from \"@headlessui/react\";\r\nimport { CheckIcon, SelectorIcon } from \"@heroicons/react/solid\";\r\nimport { Fragment } from \"react\";\r\nimport NormalizedObjects from \"../../NormalizedObjects/NormalizedObjects\";\r\nimport Project from \"../../ProjectUI/Project/ProjectInterface\";\r\n\r\nfunction classNames(...classes: any[]) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nfunction ProjectSelect(\r\n  projectList: NormalizedObjects<Project>,\r\n  selectedProjectId: string | null,\r\n  setProject: (value: string) => void\r\n) {\r\n  const ProjectSelectOption = (projectId: string | null) => {\r\n    const project = projectId\r\n      ? projectList.byId[projectId]\r\n      : { project: \"N/A\" };\r\n\r\n    return (\r\n      <Listbox.Option\r\n        key={projectId}\r\n        className={({ active }) =>\r\n          classNames(\r\n            active ? \"text-white bg-indigo-600\" : \"text-gray-900\",\r\n            \"cursor-default select-none relative py-2 pl-3 pr-9\"\r\n          )\r\n        }\r\n        value={projectId}\r\n      >\r\n        {({ selected, active }) => (\r\n          <>\r\n            <span\r\n              className={classNames(\r\n                selected ? \"font-semibold\" : \"font-normal\",\r\n                \"block truncate\"\r\n              )}\r\n            >\r\n              {project.project}\r\n            </span>\r\n\r\n            {selected ? (\r\n              <span\r\n                className={classNames(\r\n                  active ? \"text-white\" : \"text-indigo-600\",\r\n                  \"absolute inset-y-0 right-0 flex items-center pr-4\"\r\n                )}\r\n              >\r\n                <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n              </span>\r\n            ) : null}\r\n          </>\r\n        )}\r\n      </Listbox.Option>\r\n    );\r\n  };\r\n\r\n  const projectSelectedText = (projectId: string | null) => {\r\n    return projectId ? projectList.byId[projectId].project : \"N/A\";\r\n  };\r\n\r\n  const projectOptionsList = () => {\r\n    return [...projectList.allIds, null];\r\n  };\r\n\r\n  return (\r\n    <Listbox value={selectedProjectId} onChange={setProject}>\r\n      {({ open }) => (\r\n        <>\r\n          <Listbox.Label className=\"block text-sm font-medium text-gray-700\">\r\n            Project\r\n          </Listbox.Label>\r\n          <div className=\"mt-1 relative\">\r\n            <Listbox.Button className=\"bg-white relative w-full border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">\r\n              <span className=\"block truncate\">\r\n                {projectSelectedText(selectedProjectId)}\r\n              </span>\r\n              <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\r\n                <SelectorIcon\r\n                  className=\"h-5 w-5 text-gray-400\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </span>\r\n            </Listbox.Button>\r\n\r\n            <Transition\r\n              show={open}\r\n              as={Fragment}\r\n              leave=\"transition ease-in duration-100\"\r\n              leaveFrom=\"opacity-100\"\r\n              leaveTo=\"opacity-0\"\r\n            >\r\n              <Listbox.Options\r\n                static\r\n                className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\r\n              >\r\n                {projectOptionsList().map((projectId) => {\r\n                  return ProjectSelectOption(projectId);\r\n                })}\r\n              </Listbox.Options>\r\n            </Transition>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Listbox>\r\n  );\r\n}\r\n\r\nexport default ProjectSelect;\r\n","import { ChangeEvent, useState, Fragment, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useAppDispatch } from \"../../../hooks\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport Task, { TaskStatus } from \"../Task/TaskInterface\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport { Transition, Dialog } from \"@headlessui/react\";\r\nimport { XIcon } from \"@heroicons/react/outline\";\r\n\r\nimport {\r\n  getSelectedTask,\r\n  getSelectedTaskId,\r\n  updateTaskTaskName,\r\n  updateTaskTaskStatus,\r\n  updateTaskTaskNote,\r\n  updateTaskTaskDeferDate,\r\n  updateTaskTaskDueDate,\r\n  selectTask,\r\n  archiveTask,\r\n  updateTaskTaskProject,\r\n} from \"../TaskList/TaskListSlice\";\r\n\r\nimport PrioritySelect from \"./PrioritySelect\";\r\nimport ButtonGroup from \"../../ButtonGroup/ButtonGroup\";\r\nimport { TrashIcon } from \"@heroicons/react/solid\";\r\nimport ProjectSelect from \"./ProjectSelect\";\r\nimport { getProjects } from \"../../ProjectUI/ProjectList/ProjectListSlice\";\r\n/**\r\n * After clicking on a task in\r\n * @returns {FunctionComponent}\r\n */\r\nfunction SelectedTask() {\r\n  const selectedTaskId = useSelector(getSelectedTaskId);\r\n  const selectedTask: Task | null = useSelector(getSelectedTask);\r\n  const projectList = useSelector(getProjects);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (selectedTaskId !== null) {\r\n      setOpen(true);\r\n    } else {\r\n      setOpen(false);\r\n    }\r\n  }, [selectedTaskId]);\r\n\r\n  const clearSelectedTask = () => {\r\n    dispatch(selectTask(null));\r\n  };\r\n\r\n  const deleteSelectedTask = (id: string) => {\r\n    dispatch(archiveTask({ taskId: id }));\r\n  };\r\n\r\n  const updateTaskName = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    dispatch(\r\n      updateTaskTaskName({ newName: e.target.value, taskId: selectedTaskId })\r\n    );\r\n  };\r\n\r\n  const updateTaskStatus = (status: TaskStatus) => {\r\n    dispatch(\r\n      updateTaskTaskStatus({ newStatus: status, taskId: selectedTaskId })\r\n    );\r\n  };\r\n\r\n  const updateTaskNote = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    dispatch(\r\n      updateTaskTaskNote({ newNote: e.target.value, taskId: selectedTaskId })\r\n    );\r\n  };\r\n\r\n  const updateTaskDeferDate = (e: Date) => {\r\n    const newDate = e ? e.getTime() : null;\r\n    dispatch(\r\n      updateTaskTaskDeferDate({ newDate: newDate, taskId: selectedTaskId })\r\n    );\r\n  };\r\n\r\n  const updateTaskDueDate = (e: Date) => {\r\n    const newDate = e ? e.getTime() : null;\r\n    dispatch(\r\n      updateTaskTaskDueDate({ newDate: newDate, taskId: selectedTaskId })\r\n    );\r\n  };\r\n\r\n  const updateTaskProject = (projectID: string) => {\r\n    dispatch(\r\n      updateTaskTaskProject({ newProject: projectID, taskId: selectedTaskId })\r\n    );\r\n  };\r\n\r\n  // Early returns here to avoid having the selected task stay open at all times\r\n  if (\r\n    selectedTask === undefined ||\r\n    selectedTask === null ||\r\n    selectedTaskId === null\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  const styleDates = (date: number | null) => {\r\n    if (date !== null && date > 0) {\r\n      return new Date(date).toLocaleString(\"en-us\");\r\n    } else {\r\n      return \"N/A\";\r\n    }\r\n  };\r\n\r\n  const taskSubsectionHeader = (subsectionHeader: string, id: string) => {\r\n    return (\r\n      <label\r\n        htmlFor={id}\r\n        className=\"block text-lg font-medium text-gray-900 sm:mt-px sm:pt-2\"\r\n      >\r\n        {subsectionHeader}\r\n      </label>\r\n    );\r\n  };\r\n\r\n  const datepicker = (\r\n    date: number | null,\r\n    dateChangeFunction: Function,\r\n    placeholderText: string\r\n  ) => {\r\n    const chosenDate = date ? new Date(date) : null;\r\n    return (\r\n      <DatePicker\r\n        selected={chosenDate}\r\n        onChange={(date) => dateChangeFunction(date)}\r\n        isClearable\r\n        placeholderText={placeholderText}\r\n        dateFormat=\"MM/dd/yyyy\"\r\n        className=\"block w-full shadow-sm sm:text-sm focus:ring-indigo-500 focus:border-indigo-500 border-gray-300 rounded-md\"\r\n        todayButton=\"Today\"\r\n        openToDate={new Date(Date.now())}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Transition.Root show={open} as={Fragment} afterLeave={clearSelectedTask}>\r\n      <Dialog\r\n        as=\"div\"\r\n        static\r\n        className=\"fixed inset-0 overflow-hidden\"\r\n        open={open}\r\n        onClose={setOpen}\r\n      >\r\n        <div className=\"absolute inset-0 overflow-hidden\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-in-out duration-500\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in-out duration-500\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          <div className=\"fixed inset-y-0 right-0 pl-10 max-w-full flex\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"transform transition ease-in-out duration-500 sm:duration-700\"\r\n              enterFrom=\"translate-x-full\"\r\n              enterTo=\"translate-x-0\"\r\n              leave=\"transform transition ease-in-out duration-500 sm:duration-700\"\r\n              leaveFrom=\"translate-x-0\"\r\n              leaveTo=\"translate-x-full\"\r\n            >\r\n              <div className=\"w-screen max-w-md\">\r\n                <div className=\"h-full flex flex-col py-6 bg-white shadow-xl overflow-y-scroll\">\r\n                  <div className=\"px-4 sm:px-6\">\r\n                    <div className=\"flex items-start justify-between border-b pb-2\">\r\n                      {/* Task Text */}\r\n                      <Dialog.Title className=\"flex-grow text-lg font-medium text-gray-900\">\r\n                        <label\r\n                          htmlFor=\"task\"\r\n                          className=\"block text-lg font-medium text-gray-700\"\r\n                        >\r\n                          Task\r\n                        </label>\r\n                        <div className=\"mt-1\">\r\n                          <textarea\r\n                            id=\"selectedTaskName\"\r\n                            name=\"selectedTaskName\"\r\n                            rows={4}\r\n                            value={selectedTask.task}\r\n                            onChange={(e) => updateTaskName(e)}\r\n                            className=\"max-w-lg shadow-sm block w-full focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm border-gray-300 rounded-md\"\r\n                            placeholder=\"Empty task text\"\r\n                          />\r\n                        </div>\r\n                      </Dialog.Title>\r\n                      {/* Close Icon */}\r\n                      <div className=\"ml-3 h-7 flex items-center\">\r\n                        <button\r\n                          className=\"bg-white rounded-md text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                          id=\"closeSelectedTask\"\r\n                          onClick={() => setOpen(false)}\r\n                        >\r\n                          <span className=\"sr-only\">Close panel</span>\r\n                          <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"relative flex-1 px-4 sm:px-6\">\r\n                    <div className=\"absolute inset-0 px-4 sm:px-6 divide-y space-y-2\">\r\n                      {/* Button Group */}\r\n                      <div className=\"w-full\">\r\n                        {taskSubsectionHeader(\"Task Status\", \"taskStatus\")}\r\n                        {ButtonGroup(\r\n                          selectedTask.status,\r\n                          updateTaskStatus,\r\n                          [\r\n                            TaskStatus.Active,\r\n                            TaskStatus.Complete,\r\n                            TaskStatus.Dropped,\r\n                          ],\r\n                          \"selectedTask\"\r\n                        )}\r\n                      </div>\r\n                      {/* Project Select */}\r\n                      <div className=\"w-full\">\r\n                        {taskSubsectionHeader(\"Project\", \"Project\")}\r\n                        {ProjectSelect(\r\n                          projectList,\r\n                          selectedTask.project,\r\n                          updateTaskProject\r\n                        )}\r\n                      </div>\r\n                      {/* Tags */}\r\n                      <div className=\"w-full\">\r\n                        {taskSubsectionHeader(\"Tags\", \"tags\")}\r\n                        <div className=\"text-gray-500\">Not Implemented</div>\r\n                      </div>\r\n                      {/* Priority */}\r\n                      <div className=\"w-full\">\r\n                        {taskSubsectionHeader(\"Priority\", \"priority\")}\r\n                        {PrioritySelect(\r\n                          dispatch,\r\n                          selectedTaskId,\r\n                          selectedTask.priority\r\n                        )}\r\n                      </div>\r\n                      {/* Defer/Due Dates */}\r\n                      <div className=\"w-full\">\r\n                        {taskSubsectionHeader(\"Defer/Due Dates\", \"duedates\")}\r\n                        <div className=\"w-full\">\r\n                          {datepicker(\r\n                            selectedTask.deferDate,\r\n                            updateTaskDeferDate,\r\n                            \"Defer Date\"\r\n                          )}\r\n                        </div>\r\n                        <div className=\"w-full\">\r\n                          {datepicker(\r\n                            selectedTask.dueDate,\r\n                            updateTaskDueDate,\r\n                            \"Due Date\"\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      {/* Note */}\r\n                      <div className=\"w-full\">\r\n                        {taskSubsectionHeader(\"Task Note\", \"taskNote\")}\r\n                        <TextareaAutosize\r\n                          className=\"max-w-lg shadow-sm block w-full focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm border-gray-300 rounded-md\"\r\n                          placeholder=\"Empty Note\"\r\n                          id=\"selectedTaskNote\"\r\n                          value={selectedTask.note}\r\n                          onChange={(e) => updateTaskNote(e)}\r\n                        />\r\n                      </div>\r\n                      {/* Dates */}\r\n                      <div className=\"w-full\">\r\n                        {taskSubsectionHeader(\"Task Dates\", \"taskDates\")}\r\n                        <div>\r\n                          <div className=\"inline font-medium\">Created: </div>\r\n                          <div\r\n                            id=\"selectedTaskCreated\"\r\n                            className=\"inline text-sm text-gray-900\"\r\n                          >\r\n                            {styleDates(selectedTask.created)}\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <div className=\"inline font-medium\">Modified: </div>\r\n                          <div\r\n                            id=\"selectedTaskModified\"\r\n                            className=\"inline text-sm text-gray-900\"\r\n                          >\r\n                            {styleDates(selectedTask.modified)}\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <div className=\"inline font-medium\">Completed: </div>\r\n                          <div\r\n                            id=\"selectedTaskCompleted\"\r\n                            className=\"inline text-sm text-gray-900\"\r\n                          >\r\n                            {styleDates(selectedTask.completed)}\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <div className=\"inline font-medium\">Archived: </div>\r\n                          <div\r\n                            id=\"selectedTaskCompleted\"\r\n                            className=\"inline text-sm text-gray-900\"\r\n                          >\r\n                            {styleDates(selectedTask.archived)}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/* Additional Actions */}\r\n                      <div className=\"w-full\">\r\n                        {taskSubsectionHeader(\"Actions\", \"actions\")}\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"inline-flex w-full items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                          onClick={() => deleteSelectedTask(selectedTaskId)}\r\n                        >\r\n                          <TrashIcon\r\n                            className=\"-ml-1 mr-3 h-5 w-5\"\r\n                            aria-hidden=\"true\"\r\n                          />\r\n                          Archive Task\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Transition.Child>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n}\r\n\r\nexport default SelectedTask;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../../store\";\r\n\r\nfunction TaskHeader(projectId: string | null) {\r\n  const projectName = useSelector((state: RootState) =>\r\n    projectId ? state.projects.projectList.byId[projectId].project : \"Home\"\r\n  );\r\n\r\n  if (!projectId) {\r\n    return;\r\n  } else {\r\n    return (\r\n      <div className=\"border-b border-gray-200 px-4 py-4 sm:flex sm:items-center sm:justify-between sm:px-6 lg:px-8\">\r\n        <div className=\"flex-1 min-w-0\">\r\n          <h1 className=\"text-lg font-medium leading-6 text-gray-900 sm:truncate\">\r\n            {projectName}\r\n          </h1>\r\n        </div>\r\n        <div className=\"mt-4 flex sm:mt-0 sm:ml-4\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"ml-3 inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 sm:order-0 sm:ml-0\"\r\n          >\r\n            Share\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskHeader;\r\n","import React, { ChangeEvent, Fragment, useState } from \"react\";\r\nimport { Disclosure, Transition } from \"@headlessui/react\";\r\n\r\nimport { addTask } from \"../../TaskList/TaskListSlice\";\r\nimport { CheckCircleIcon } from \"@heroicons/react/outline\";\r\nimport { useAppDispatch } from \"../../../../hooks\";\r\n\r\n/**\r\n * Returns the AddNewTask Button, and the input it controls\r\n * @return {FunctionComponent}\r\n */\r\nfunction AddNewTask(projectId: string | null) {\r\n  const [taskText, setTaskText] = useState(\"\");\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const createNewTask = () => {\r\n    dispatch(addTask({ task: taskText.trim(), project: projectId }));\r\n    setTaskText(\"\");\r\n  };\r\n\r\n  const onEnterPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === \"Enter\" && e.shiftKey === false) {\r\n      e.preventDefault();\r\n      createNewTask();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Disclosure>\r\n      {({ open }) => (\r\n        <>\r\n          <Disclosure.Button\r\n            type=\"button\"\r\n            className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 sm:order-1 ml-3\"\r\n          >\r\n            Add New Task\r\n          </Disclosure.Button>\r\n          <Transition\r\n            show={open}\r\n            as={Fragment}\r\n            enter=\"transition ease-out duration-75\"\r\n            enterFrom=\"transform opacity-0 scale-95\"\r\n            enterTo=\"transform opacity-100 scale-100\"\r\n            leave=\"transition ease-in duration-75\"\r\n            leaveFrom=\"transform opacity-100 scale-100\"\r\n            leaveTo=\"transform opacity-0 scale-95\"\r\n          >\r\n            <Disclosure.Panel static>\r\n              <div className=\"flex flex-row relative order-2\">\r\n                <input\r\n                  className=\"ml-4 px-4 flex-grow border border-purple-500 rounded-md font-medium text-sm shadow-sm focus:ring-purple-500 focus:outline-none text-black\"\r\n                  type=\"text\"\r\n                  id=\"addTaskInput\"\r\n                  placeholder=\"Enter new task\"\r\n                  value={taskText}\r\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\r\n                    setTaskText(e.target.value)\r\n                  }\r\n                  onKeyDown={(e) => {\r\n                    onEnterPress(e);\r\n                    open = false;\r\n                  }}\r\n                />\r\n                <button\r\n                  className=\"absolute inset-y-0 right-0 pl-3 pr-3 flex items-center bg-purple-500 rounded rounded-l-none\"\r\n                  id=\"submitNewTaskButton\"\r\n                  onClick={() => {\r\n                    createNewTask();\r\n                    open = false;\r\n                  }}\r\n                >\r\n                  <CheckCircleIcon className=\"h-5 w-5 text-white\" />\r\n                </button>\r\n              </div>\r\n            </Disclosure.Panel>\r\n          </Transition>\r\n        </>\r\n      )}\r\n    </Disclosure>\r\n  );\r\n}\r\n\r\nexport default AddNewTask;\r\n","import AddNewTask from \"./AddNewTask/AddNewTask\";\r\n\r\nfunction TopHeader(projectId: string | null) {\r\n  return (\r\n    <div className=\"bg-purple-700 border-y border-gray-200 px-4 py-4 sm:flex sm:items-center sm:justify-between sm:px-6 lg:px-8 text-white shadow-lg\">\r\n      <div className=\"flex-1 min-w-0\">\r\n        <h1 className=\"text-lg font-medium leading-6 sm:truncate\">\r\n          {projectId ? \"Projects\" : \"Inbox\"}\r\n        </h1>\r\n      </div>\r\n      {AddNewTask(projectId)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopHeader;\r\n","import { Dialog, Transition } from \"@headlessui/react\";\r\nimport { Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getExportJSONModalOpen,\r\n  setExportJSONModal,\r\n} from \"../UICommunications/UICommunicationsSlice\";\r\nimport { RootState } from \"../../store\";\r\n\r\nfunction ExportState() {\r\n  const open = useSelector(getExportJSONModalOpen);\r\n  const dispatch = useDispatch();\r\n\r\n  const jsonData = useSelector((state: RootState) => state);\r\n\r\n  const setOpen = () => {\r\n    dispatch(setExportJSONModal(!open));\r\n  };\r\n\r\n  const saveStateAsJSON = () => {\r\n    const fileData = JSON.stringify(jsonData);\r\n    const blob = new Blob([fileData], { type: \"text/plain\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.download = \"OpenGTD_Data.json\";\r\n    link.href = url;\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        static\r\n        className=\"fixed z-10 inset-0 overflow-y-auto\"\r\n        open={open}\r\n        onClose={setOpen}\r\n      >\r\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          {/* This element is to trick the browser into centering the modal contents. */}\r\n          <span\r\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            &#8203;\r\n          </span>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          >\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6\">\r\n              <div className=\"px-4 py-5 sm:p-6\">\r\n                <Dialog.Title className=\"text-lg leading-6 font-medium text-gray-900\">\r\n                  Export Tasks as JSON\r\n                </Dialog.Title>\r\n                <div className=\"mt-2 max-w-xl text-sm text-gray-500\">\r\n                  <p>Download a JSON file of your data</p>\r\n                </div>\r\n                <div className=\"mt-5\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"inline-flex items-center justify-center px-4 py-2 border border-transparent font-medium rounded-md text-purple-700 bg-purple-100 hover:bg-purple-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 sm:text-sm\"\r\n                    onClick={() => {\r\n                      saveStateAsJSON();\r\n                      setOpen();\r\n                    }}\r\n                  >\r\n                    Delete account\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n}\r\nexport default ExportState;\r\n","import { Dialog, Transition } from \"@headlessui/react\";\r\nimport { ChangeEvent, Fragment } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getImportJSONModalOpen,\r\n  setImportJSONModal,\r\n} from \"../UICommunications/UICommunicationsSlice\";\r\n\r\nfunction ImportState() {\r\n  const open = useSelector(getImportJSONModalOpen);\r\n  const dispatch = useDispatch();\r\n\r\n  const setOpen = () => {\r\n    dispatch(setImportJSONModal(!open));\r\n  };\r\n\r\n  const uploadFile = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      const textFromFile = file;\r\n    };\r\n    const output = reader.readAsText(file);\r\n    console.log(output);\r\n  };\r\n\r\n  return (\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        static\r\n        className=\"fixed z-10 inset-0 overflow-y-auto\"\r\n        open={open}\r\n        onClose={setOpen}\r\n      >\r\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          {/* This element is to trick the browser into centering the modal contents. */}\r\n          <span\r\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            &#8203;\r\n          </span>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          >\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6\">\r\n              <form>\r\n                <Dialog.Title className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                  Import JSON\r\n                </Dialog.Title>\r\n                <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                  <div className=\"max-w-lg flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\r\n                    <div className=\"space-y-1 text-center\">\r\n                      <svg\r\n                        className=\"mx-auto h-12 w-12 text-gray-400\"\r\n                        stroke=\"currentColor\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 48 48\"\r\n                        aria-hidden=\"true\"\r\n                      >\r\n                        <path\r\n                          d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\r\n                          strokeWidth={2}\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                        />\r\n                      </svg>\r\n                      <div className=\"flex text-sm text-gray-600\">\r\n                        <label\r\n                          htmlFor=\"file-upload\"\r\n                          className=\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\"\r\n                        >\r\n                          <span>Upload a file</span>\r\n                          <input\r\n                            id=\"file-upload\"\r\n                            name=\"file-upload\"\r\n                            type=\"file\"\r\n                            className=\"sr-only\"\r\n                            onChange={(e) => uploadFile(e)}\r\n                          />\r\n                        </label>\r\n                        <p className=\"pl-1\">or drag and drop</p>\r\n                      </div>\r\n                      <p className=\"text-xs text-gray-500\">\r\n                        PNG, JPG, GIF up to 10MB\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"justify-center flex\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"inline-flex justify-center items-center px-4 py-2 my-2 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n}\r\n\r\nexport default ImportState;\r\n","import PinnedProjects from \"../PinnedProjects/PinnedProjects\";\r\nimport TaskListFilters from \"./TaskListFilter/TaskListFilters\";\r\nimport SearchHeader from \"./SearchHeader/SearchHeader\";\r\nimport TaskList from \"./TaskList/TaskList\";\r\nimport SelectedTask from \"./SelectedTask/SelectedTask\";\r\nimport MobileSidebar from \"../Sidebars/MobileSidebar\";\r\nimport Sidebar from \"../Sidebars/Sidebar\";\r\nimport TaskHeader from \"./TasksHeader/TasksHeader\";\r\nimport TopTaskHeader from \"./TasksHeader/TopTaskHeader\";\r\nimport { useLocation } from \"react-router\";\r\nimport ExportState from \"../UserProfileDropdown/ExportState\";\r\nimport ImportState from \"../UserProfileDropdown/ImportState\";\r\n\r\nfunction TaskUI(sidebarOpen: boolean, setSidebarOpen: Function) {\r\n  const currentURL = useLocation().pathname;\r\n\r\n  // If a project has been passed in, this should display the Projects task view, not the Inbox\r\n  const projectId = currentURL ? currentURL.split(\"/\")[2] : null;\r\n\r\n  return (\r\n    <div className=\"h-screen flex overflow-hidden bg-white\">\r\n      {/* Slideout sidebar for mobile */}\r\n      {MobileSidebar(sidebarOpen, setSidebarOpen)}\r\n      {/* Static sidebar for desktop */}\r\n      {Sidebar(sidebarOpen, setSidebarOpen)}\r\n      {/* Main column */}\r\n      <div className=\"flex flex-col w-0 flex-1 overflow-hidden\">\r\n        {/* Search header */}\r\n        {SearchHeader(sidebarOpen, setSidebarOpen)}\r\n        <main className=\"flex-1 relative z-0 overflow-y-auto focus:outline-none\">\r\n          {TopTaskHeader(projectId)}\r\n          {/* Page title & actions */}\r\n          {TaskHeader(projectId)}\r\n          {/* Pinned projects */}\r\n          {PinnedProjects(projectId)}\r\n          {/* Task Filters */}\r\n          {TaskListFilters()}\r\n          {/* Project List */}\r\n          {TaskList(projectId)}\r\n        </main>\r\n      </div>\r\n      {SelectedTask()}\r\n      {ExportState()}\r\n      {ImportState()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskUI;\r\n","import { ChevronRightIcon } from \"@heroicons/react/solid\";\r\n\r\nfunction TinyProject(props: { projectId: string }) {\r\n  return (\r\n    <li key={props.projectId}>\r\n      <div className=\"group flex items-center justify-between px-4 py-4 hover:bg-gray-50 sm:px-6 cursor-pointer\">\r\n        <span className=\"flex items-center truncate space-x-3\">\r\n          <span\r\n            className={\"w-2.5 h-2.5 flex-shrink-0 rounded-full\"}\r\n            aria-hidden=\"true\"\r\n          />\r\n          <span className=\"font-medium truncate text-sm leading-6\">\r\n            project name\r\n          </span>\r\n        </span>\r\n        <ChevronRightIcon\r\n          className=\"ml-4 h-5 w-5 text-gray-400 group-hover:text-gray-500 flex-shrink-0\"\r\n          aria-hidden=\"true\"\r\n        />\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default TinyProject;\r\n","import { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getTasks } from \"../../TaskUI/TaskList/TaskListSlice\";\r\nimport TinyProject from \"../Project/TinyProject\";\r\nimport { getProjects } from \"./ProjectListSlice\";\r\nimport { getFilters } from \"../../TaskUI/TaskListFilter/TaskFilterSlice\";\r\nimport Task from \"../../TaskUI/Task/Task\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ProjectList() {\r\n  const projectList = useSelector(getProjects);\r\n  const taskList = useSelector(getTasks);\r\n  const taskListFilters = useSelector(getFilters);\r\n\r\n  const getTaskById = (taskId: string) => taskList.byId[taskId];\r\n\r\n  const taskInProjectFilter = (projectId: string, taskId: string) => {\r\n    return getTaskById(taskId).project === projectId;\r\n  };\r\n\r\n  const hasNoteFilter = (taskId: string) => {\r\n    if (taskListFilters.hasNote) {\r\n      return getTaskById(taskId).note !== \"\";\r\n    } else if (taskListFilters.hasNote === false) {\r\n      return getTaskById(taskId).note === \"\";\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const priorityFilter = (taskId: string) => {\r\n    if (taskListFilters.priority) {\r\n      return taskListFilters.priority === getTaskById(taskId).priority;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const completionFilter = (taskId: string) => {\r\n    if (taskListFilters.completion) {\r\n      return taskListFilters.completion === getTaskById(taskId).status;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const archivedFilter = (taskId: string) => {\r\n    return getTaskById(taskId).archived === null;\r\n  };\r\n\r\n  const buildTinyProjectList = (project: string) => {\r\n    if (projectList.allIds) {\r\n      return projectList.allIds\r\n        .filter(completionFilter)\r\n        .filter(priorityFilter)\r\n        .filter(hasNoteFilter)\r\n        .filter(archivedFilter)\r\n        .map((projectId, index) => {\r\n          return <TinyProject projectId={projectId} key={index} />;\r\n        });\r\n    }\r\n  };\r\n\r\n  const sortFunction = (taskIdA: string, taskIdB: string) => {\r\n    const taskA = getTaskById(taskIdA);\r\n    const taskB = getTaskById(taskIdB);\r\n\r\n    if (!taskA) {\r\n      return -1;\r\n    }\r\n    if (!taskB) {\r\n      return 1;\r\n    }\r\n\r\n    if (taskA.dueDate > taskB.dueDate) return 1;\r\n    if (taskA.dueDate < taskB.dueDate) return -1;\r\n    if (taskA.deferDate > taskB.deferDate) return 1;\r\n    if (taskA.deferDate < taskB.deferDate) return -1;\r\n    return 0;\r\n  };\r\n\r\n  const buildProjectTaskList = (project: string) => {\r\n    const projectFilteredTaskIds = taskList.allIds.filter((task) =>\r\n      taskInProjectFilter(project, task)\r\n    );\r\n\r\n    if (projectFilteredTaskIds.length > 0) {\r\n      return projectFilteredTaskIds\r\n        .filter(completionFilter)\r\n        .filter(priorityFilter)\r\n        .filter(hasNoteFilter)\r\n        .filter(archivedFilter)\r\n        .sort(sortFunction)\r\n        .map((taskId, index) => {\r\n          return <Task projectId={project} taskId={taskId} key={index} />;\r\n        });\r\n    } else {\r\n      return (\r\n        <tr>\r\n          <td colSpan={7} className=\"text-gray-500 text-center\">\r\n            No tasks in project\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n  };\r\n\r\n  const tinyProjectSubTable = () => {\r\n    return projectList.allIds.map((project) => {\r\n      return (\r\n        <ul\r\n          key={project}\r\n          className=\"mt-3 border-t border-gray-200 divide-y divide-gray-100\"\r\n        >\r\n          {buildTinyProjectList(project)}\r\n        </ul>\r\n      );\r\n    });\r\n  };\r\n\r\n  const projectSubTable = () => {\r\n    return projectList.allIds.map((project) => {\r\n      return (\r\n        <div key={project}>\r\n          <Link to={`/projects/${project}`}>\r\n            <div className=\"bg-white px-4 py-5 border-t-2 mt-1 border-gray-200 sm:px-6\">\r\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\r\n                {projectList.byId[project].project}\r\n              </h3>\r\n            </div>\r\n          </Link>\r\n          <table className=\"min-w-full\" id=\"taskList\">\r\n            <thead>\r\n              <tr className=\"border-t border-gray-200\">\r\n                <th className=\"py-3 px-2 border-b border-gray-200 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\" />\r\n                <th className=\"px-2 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  <span className=\"lg:pl-2\">Task</span>\r\n                </th>\r\n                <th className=\"px-6 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  <span className=\"lg:pl-2\">Project</span>\r\n                </th>\r\n                <th className=\"px-12 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Priority\r\n                </th>\r\n                <th className=\"hidden md:table-cell px-6 py-3 border-b border-gray-200 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Defer Date\r\n                </th>\r\n                <th className=\"hidden md:table-cell px-6 py-3 border-b border-gray-200 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Due Date\r\n                </th>\r\n                <th className=\"pr-6 py-3 border-b border-gray-200 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\" />\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-100\">\r\n              {buildProjectTaskList(project)}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* Projects list (only on smallest breakpoint) */}\r\n      <div className=\"mt-10 sm:hidden\">\r\n        <div className=\"px-4 sm:px-6\">\r\n          <h2 className=\"text-gray-500 text-xs font-medium uppercase tracking-wide\">\r\n            Projects\r\n          </h2>\r\n          {tinyProjectSubTable()}\r\n        </div>\r\n      </div>\r\n      {/* Projects table (small breakpoint and up) */}\r\n      <div className=\"hidden sm:block\">\r\n        <div className=\"align-middle inline-block min-w-full border-b border-gray-200\">\r\n          {projectSubTable()}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ProjectList;\r\n","import React, { ChangeEvent, Fragment, useState } from \"react\";\r\nimport { Disclosure, Transition } from \"@headlessui/react\";\r\n\r\nimport { addProject } from \"../../ProjectList/ProjectListSlice\";\r\nimport { CheckCircleIcon } from \"@heroicons/react/outline\";\r\nimport { useAppDispatch } from \"../../../../hooks\";\r\n\r\nfunction AddNewProject() {\r\n  const [projectText, setProjectText] = useState(\"\");\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const createNewProject = () => {\r\n    dispatch(addProject(projectText.trim()));\r\n    setProjectText(\"\");\r\n  };\r\n\r\n  const onEnterPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === \"Enter\" && e.shiftKey === false) {\r\n      e.preventDefault();\r\n      createNewProject();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Disclosure>\r\n      {({ open }) => (\r\n        <>\r\n          <Disclosure.Button\r\n            type=\"button\"\r\n            className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 sm:order-1 ml-3\"\r\n          >\r\n            Add New Project\r\n          </Disclosure.Button>\r\n          <Transition\r\n            show={open}\r\n            as={Fragment}\r\n            enter=\"transition ease-out duration-75\"\r\n            enterFrom=\"transform opacity-0 scale-95\"\r\n            enterTo=\"transform opacity-100 scale-100\"\r\n            leave=\"transition ease-in duration-75\"\r\n            leaveFrom=\"transform opacity-100 scale-100\"\r\n            leaveTo=\"transform opacity-0 scale-95\"\r\n          >\r\n            <Disclosure.Panel static>\r\n              <div className=\"flex flex-row relative order-2\">\r\n                <input\r\n                  className=\"ml-4 px-4 border border-purple-500 rounded-md font-medium text-sm shadow-sm focus:ring-purple-500 focus:outline-none text-black\"\r\n                  type=\"text\"\r\n                  id=\"addTaskInput\"\r\n                  placeholder=\"Enter new project\"\r\n                  value={projectText}\r\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\r\n                    setProjectText(e.target.value)\r\n                  }\r\n                  onKeyDown={(e) => {\r\n                    onEnterPress(e);\r\n                    open = false;\r\n                  }}\r\n                />\r\n                <button\r\n                  className=\"absolute inset-y-0 right-0 pl-3 pr-3 flex items-center bg-purple-500 rounded rounded-l-none\"\r\n                  id=\"submitNewProjectButton\"\r\n                  onClick={() => {\r\n                    createNewProject();\r\n                    open = false;\r\n                  }}\r\n                >\r\n                  <CheckCircleIcon className=\"h-5 w-5 text-white\" />\r\n                </button>\r\n              </div>\r\n            </Disclosure.Panel>\r\n          </Transition>\r\n        </>\r\n      )}\r\n    </Disclosure>\r\n  );\r\n}\r\n\r\nexport default AddNewProject;\r\n","import AddNewProject from \"./AddNewProject/AddNewProject\";\r\n\r\nfunction TopHeader() {\r\n  return (\r\n    <div className=\"bg-purple-700 border-y border-gray-200 px-4 py-4 sm:flex sm:items-center sm:justify-between sm:px-6 lg:px-8 text-white shadow-lg\">\r\n      <div className=\"flex-1 min-w-0\">\r\n        <h1 className=\"text-lg font-medium leading-6 sm:truncate\">Projects</h1>\r\n      </div>\r\n      {AddNewProject()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopHeader;\r\n","import MobileSidebar from \"../Sidebars/MobileSidebar\";\r\nimport PinnedProjects from \"../PinnedProjects/PinnedProjects\";\r\nimport Sidebar from \"../Sidebars/Sidebar\";\r\nimport SelectedTask from \"../TaskUI/SelectedTask/SelectedTask\";\r\nimport SearchHeader from \"../TaskUI/SearchHeader/SearchHeader\";\r\nimport ProjectList from \"./ProjectList/ProjectList\";\r\nimport TopProjectHeader from \"./ProjectHeader/TopProjectHeader\";\r\nimport ExportState from \"../UserProfileDropdown/ExportState\";\r\nimport ImportState from \"../UserProfileDropdown/ImportState\";\r\nimport TaskListFilters from \"../TaskUI/TaskListFilter/TaskListFilters\";\r\n\r\nfunction ProjectUI(sidebarOpen: boolean, setSidebarOpen: Function) {\r\n  return (\r\n    <div className=\"h-screen flex overflow-hidden bg-white\">\r\n      {/* Slideout sidebar for mobile */}\r\n      {MobileSidebar(sidebarOpen, setSidebarOpen)}\r\n      {/* Static sidebar for desktop */}\r\n      {Sidebar(sidebarOpen, setSidebarOpen)}\r\n      {/* Main column */}\r\n      <div className=\"flex flex-col w-0 flex-1 overflow-hidden\">\r\n        {SearchHeader(sidebarOpen, setSidebarOpen)}\r\n        <main className=\"flex-1 relative z-0 overflow-y-auto focus:outline-none\">\r\n          {/* Page title & actions */}\r\n          {TopProjectHeader()}\r\n          {/* Pinned projects */}\r\n          {PinnedProjects(null)}\r\n          {/* Task Filters */}\r\n          {TaskListFilters()}\r\n          {/* Project List */}\r\n          {ProjectList()}\r\n        </main>\r\n      </div>\r\n      {SelectedTask()}\r\n      {ExportState()}\r\n      {ImportState()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectUI;\r\n","import { useState } from \"react\";\r\n\r\nimport Sidebar from \"./Components/Sidebars/Sidebar\";\r\nimport MobileSidebar from \"./Components/Sidebars/MobileSidebar\";\r\nimport { Switch, Route } from \"react-router\";\r\nimport TaskUI from \"./Components/TaskUI/TaskUI\";\r\nimport ProjectUI from \"./Components/ProjectUI/ProjectUI\";\r\n\r\nexport default function App() {\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        {TaskUI(sidebarOpen, setSidebarOpen)}\r\n      </Route>\r\n      <Route path=\"/inbox\">{TaskUI(sidebarOpen, setSidebarOpen)}</Route>\r\n      <Route exact path=\"/projects\">\r\n        {ProjectUI(sidebarOpen, setSidebarOpen)}\r\n      </Route>\r\n      <Route path=\"/projects/:id\">{TaskUI(sidebarOpen, setSidebarOpen)}</Route>\r\n      <Route>\r\n        <div className=\"h-screen flex overflow-hidden bg-white\">\r\n          {/* Slideout sidebar for mobile */}\r\n          {MobileSidebar(sidebarOpen, setSidebarOpen)}\r\n          {/* Static sidebar for desktop */}\r\n          {Sidebar(sidebarOpen, setSidebarOpen)}\r\n          {/* Main column */}\r\n          <div className=\"flex flex-col w-0 flex-1 overflow-hidden\">\r\n            {/* TODO: Change this to be an actual error screen that automatically creates a github issue */}\r\n            <main className=\"flex-1 relative z-0 overflow-y-auto focus:outline-none\">\r\n              oops\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store, { persistor } from \"./store\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <React.StrictMode>\r\n        <Router basename=\"open-gtd\">\r\n          <App />\r\n        </Router>\r\n      </React.StrictMode>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}